.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Pod::FindPods 3"
.TH Pod::FindPods 3 "2012-11-16" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Tk::Pod::FindPods \- find Pods installed on the current system
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Tk::Pod::FindPods;
\&
\&    my $o = Tk::Pod::FindPods\->new;
\&    $pods = $o\->pod_find(\-categorized => 1, \-usecache => 1);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SS "pod_find"
.IX Subsection "pod_find"
The \fBpod_find\fR method scans the current system for available Pod
documentation. The keys of the returned hash reference are the names
of the modules or Pods (\f(CW\*(C`::\*(C'\fR substituted by \f(CW\*(C`/\*(C'\fR \-\-\- this makes it
easier for Tk::Pod::Tree, as the separator may only be of one
character). The values are the corresponding filenames.
.PP
If \f(CW\*(C`\-categorized\*(C'\fR is specified, then the returned hash has an extra
level with four categories: \fBperl\fR (for core language documentation),
\&\fBpragma\fR (for pragma documentation like var or
strict), \fBmod\fR (core or \s-1CPAN\s0 modules), and \fBscript\fR (perl
scripts with embedded Pod documentation). Otherwise, \f(CW\*(C`\-category\*(C'\fR may
be set to force the Pods into a category.
.PP
By default, \f(CW@INC\fR is scanned for Pods. This can be overwritten by
the \f(CW\*(C`\-directories\*(C'\fR option (specify as an array reference).
.PP
If \f(CW\*(C`\-usecache\*(C'\fR is specified, then the list of Pods is cached (see
cache directory). \f(CW\*(C`\-usecache\*(C'\fR is disabled if
\&\f(CW\*(C`\-categorized\*(C'\fR is not set or \f(CW\*(C`\-directories\*(C'\fR is set.
.SS "WriteCache"
.IX Subsection "WriteCache"
Write the Pod cache. The cache is written to the cache
directory. The file name is constructed from the
perl version, operation system and user id.
.SS "\fILoadCache()\fP"
.IX Subsection "LoadCache()"
Load the Pod cache, if possible.
.SS "Cache directory"
.IX Subsection "Cache directory"
By default the cache file is written to the directory
\&\fI~/.tkpod_cache\fR (Unix systems), or the data directory as determined
by File::HomeDir (Windows, MacOSX). If everything fails, then the
temporary directory (\fI/tmp\fR or the \s-1OS\s0 equivalent) is used.
.PP
If necessary, then the last path component will be created (that is,
\&\fI.tkpod_cache\fR will be created if the directory does not exist).
.PP
To use another cache directory set the environment variable
\&\*(L"\s-1TKPODCACHE\s0\*(R".
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.IP "\s-1TKPODCACHE\s0" 4
.IX Item "TKPODCACHE"
Use a custom cache file instead of a file in the cache directory.
The following placeholders are recognized:
.RS 4
.ie n .IP "%v" 4
.el .IP "\f(CW%v\fR" 4
.IX Item "%v"
The perl version.
.ie n .IP "%o" 4
.el .IP "\f(CW%o\fR" 4
.IX Item "%o"
The \s-1OS\s0 (technically correct: the archname, which can include tokens
like \*(L"64int\*(R" or \*(L"thread\*(R").
.ie n .IP "%u" 4
.el .IP "\f(CW%u\fR" 4
.IX Item "%u"
The user id.
.RE
.RS 4
.Sp
Example for using \fI/some/other/directory\fR for the cache file location:
.Sp
.Vb 1
\&        TKPODCACHE=/some/other/directory/pods_%v_%o_%u; export TKPODCACHE
.Ve
.Sp
or
.Sp
.Vb 1
\&        setenv TKPODCACHE /some/other/directory/pods_%v_%o_%u
.Ve
.Sp
depending on your shell (sh-like or csh-like).
.RE
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Tk::Tree.
.SH "AUTHOR"
.IX Header "AUTHOR"
Slaven ReziX <\fIslaven@rezic.de\fR>
.PP
Copyright (c) 2001,2003,2004,2005,2007,2009 Slaven ReziX. All rights reserved.
This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
