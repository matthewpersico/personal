# -*- sh -*-
# ~/.profile.${USER}
# Isolates my stuff.

##DEBUG: ~/personal/bin/pstree -p $$ | grep -q '/crond' | grep -qv grep || echo "$(date): ~/.profile.${USER} is running..."

## How to plug in (monkeypatch) set -x if needed
[ -e /tmp/profile.mpersico5 ] && . /tmp/profile.mpersico5
if [ ! "$(basename $SHELL)" = 'bash' ]
then
    echo "Skipping profile.mpersico5 under '$SHELL'"
    return 0 ## return ok not in a function because this script is dotted in.
fi

shopt -s expand_aliases

PROFILE_FILE=${BASH_SOURCE[0]}
profile_edit ()
{
    xo $PROFILE_FILE
}
#nxport -f profile_edit
alias profile-edit=profile_edit

profile_reload ()
{
    . $PROFILE_FILE
}
#nxport -f profile_reload
alias profile-reload=profile_reload

##
## Start here
##
export PERSONALROOT=~/personal
export PERSONALBIN=$PERSONALROOT/bin

## Utils load first
. $PERSONALBIN/utilfuncs
utilfuncs-load

## Path manips next. Now we have some minimal defs to use going forward.
. $PERSONALBIN/pathfuncs
pathfuncs-reload

## Now add bbstuff...
if [ -d ~/bloomberg ]
then
    export BLOOMBERGROOT=~/bloomberg
    export BLOOMBERGBIN=$BLOOMBERGROOT/bin
    addpath -f PATH $BLOOMBERGBIN
fi
## ...and our stuff
addpath -f PATH $PERSONALBIN

##
## Major initializations
##
on_nfs ()
{
    df -k $HOME | grep nfs > /dev/null
    return $?
}

CRON=$(~/personal/bin/pstree -p $$ | grep '/crond' | grep -qv grep && echo true || echo false)

funcsinitlist='auditfuncs histfuncs utilfuncs cdfuncs gitfuncs dotfilesfuncs \
  Xfuncs xtermfuncs yumaptfuncs rsyncfuncs perlfuncs'

for i in $funcsinitlist
do
    for d in $PERSONALBIN
    do
        if [ -f $d/$i ]
        then
            case $i in
                histfuncs | xtermfuncs )
                    ! $CRON && . $d/$i ;;
                * )
                    . $d/$i ;;
            esac
        fi
    done
done

! $CRON && (cd $PERSONALROOT
            echo "** Check $(pwd) against master ***"
            git-check-with-master --bail_on_dirty
            echo "** Check $(pwd) against itself ***"
            git status)

# ALIASES

# Conveniences
alias cvs='echo cvs? Are you nuts? - Try again!'
alias dir='ls -la '
alias envg='env | grep '
alias setg='set | grep '
alias allg='(env && set) | grep '
alias rm='rm -i '
alias mydiff='diff -U3 '
alias sidediff='diff -w --side-by-side --suppress-common-lines '
alias mopquota='df -h '
alias showfunc='type '
alias grepnc='grep --color=never'

# Fat finger protection
alias vf='echo cd, you moron; cd '
alias fit='echo dir, you moron; dir '

## GIT - Probably should put the .git-prompt.sh code, and the exports below,
## into gitfuncs as a function and just call the function here.
git_contrib_loaded=$(declare -F | grep __git_ps1)
if [ -z "$git_contrib_loaded" ]
then
    if [ -e ~/.git-prompt.sh ]
    then
        . ~/.git-prompt.sh
    fi
fi
for i in $(declare -F | grep __git | grep -v -- --fx | sed 's/.* //')
do
    safe_func_export $i
done

# MISC

# STOP clearing the screen!!!
LESS="-X"
export LESS

if [ ! "$EMACS" = 't' ]
then
    ## Override prompt (assuming git stuff is loaded, either in chimera or locally)
    ##     status of     these change
    ##     prior command xterm title
    ##     |             |          |
    ##     |        +--+ |          +------+
    ##     |        |    |                 |
    ##     v--------v    v-----------------v
    PS1='\n[\$? = $?]\n\n\[\e]0;\u@\h:\w\a\]what    : \u@\h\nwhen    : \d \t$(__git_ps1 "\nbranch  : %s")$(git-get-stash-count -na -no0 "\nstashes : ")$(git-get-default-push -na "\npush    : ")\npwd     : \w\n\n\$ '
else
    PS1='\n[\$? = $?]\n\nwhat    : \u@\h\nwhen    : \d \t$(__git_ps1 "\nbranch  : %s")$(git-get-stash-count -na -no0 "\nstashes : ")$(git-get-default-push -na "\npush    : ")\npwd     : \w\n\n\$ '
fi
export PS1

# for silencing emacs 24.4 dbus warning message
export NO_AT_BRIDGE=1

# Editing
## Do NOT use an emacs command that hooks into the gnuserver or you'll have to
## exit the whole session to register completion with the user of EDITOR
EDITOR='vi'
! $CRON && [ $(which emacs) ] && EDITOR='emacsclient -c'
export EDITOR
LOGIT_EDITOR='emacs -Q'
export LOGIT_EDITOR

if [ ! -e ~/.bbprofile ]
then
    ## the odds are that we are not using chimera and the packaging of /opt/bb
    ## stuff has put /opt/bb items last on the path. Therefore we will move
    ## them up.

    ## Find our path. BB is after personal, so let's stick new stuff after
    ## that.
    pb=$(searchpath -n "^$BLOOMBERGBIN$")
    pbi=$(echo $pb | sed 's|:.*||')
    ## Adjust for 0 vs 1 counting
    ((pbi+=1))

    for p in /opt/bb/sbin /opt/bb/bin
    do
        ## Only if directory exists
        if [ -d $p ]
        then
            ## Delete from path if in path
            delpath $p

            ## Add just after ours
            addpath -i${pbi} $p
        fi
    done
  export PATH
fi

if [ -d $BLOOMBERGROOT ]
then

    funcsinitlist='svnfuncs bbdotfilesfuncs snapshotfuncs vmfuncs rsyncfuncs \
 pythonfuncs toolkitfuncs cvsfuncs builddebfuncs dpkgfuncs bbfuncs'

    for i in $funcsinitlist
    do
        for d in $BLOOMBERGBIN
        do
            if [ -f $d/$i ]
            then
                case $i in
                    histfuncs | xtermfuncs )
                        ! $CRON && . $d/$i ;;
                    * )
                        . $d/$i ;;
                esac
            fi
        done
    done

    # if chimera generated aliases exist, pull them into the current ENV
    [ -f ~/.bbalias ] && . ~/.bbalias

    # Setup completion for plink - more for the example than the usage.
    complete -f -X '!*.mk' plink

    # AD stuff
    [ -f /opt/quest/bin/vastool ] && alias authinfo="/opt/quest/bin/vastool search CN=${USER}"

    ## Fix emacs flyspell on VMs
    export LC_ALL=C
    export LANG=C

    ## Stupid Caps Lock! (2>... silences the errors when not under X)
    xmodmap ~/.Xmodmap 2>/dev/null

    ## Interference with remote dpkg stuff
    addpath -s , -p no_proxy 'blp-dpkg.dev.bloomberg.com'
    addpath -s , -p no_proxy 'devgit.dev.bloomberg.com'

    ## Default colors frequently conflict with different terminal background colors.
    alias ls >/dev/null 2>&1
    if [ "$?" = '0' ]
    then
        unalias ls
    fi
fi

##DEBUG: ~/personal/bin/pstree -p $$ | grep '/crond' | grep -qv grep || # echo "$(date): ~/.profile.${USER} has run"
