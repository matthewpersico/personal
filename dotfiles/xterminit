#!/usr/bin/env bash
# shellcheck shell=ksh
# shellcheck disable=SC1090 # Sourcing files without a fixed path.

# xterminit

## WARNING: This script is run in the Bloomberg environment on dev machines
## under ksh before Chimera switches over to bash. This script MUST be valid
## KORN SHELL for as long as it is run in a Bloomberg environment.

## - No associative arrays.
## - No variables with - in them. Use _ instead.
if [ -z "$DISPLAY" ]
then
    export DISPLAY=:0.0
fi

## Is X installed?
if ! type -P xmodmap 1>/dev/null
then
    echo 'No X installed. xterm setup skipped.'
    return 0
fi

## Is X running?
if ! perl -e 'alarm shift @ARGV; exec @ARGV' 5 xmodmap 1>/dev/null 2>/dev/null
then
    if ! ~/personal/bin/launchxserver --silent
    then
        echo "XServer not running, can't be launched. xterm setup skipped."
        return 0
    fi
fi

if [ -z "$XTERM" ]
then
    for i in /usr/bin/X11 /usr/bin /bin /opt/bb/bin
    do
        if [ -z "$XTERM" ] && [ -e "$i/xterm" ]
        then
            XTERM="$i/xterm -sb -sl 40000"
            break
        fi
    done
    if [ -z "$XTERM" ]
    then
        echo "$(date) - $(hostname) - Cannot find an xterm to use. xterm setup stops." >> ~/xterminit.stop
        return 0
    fi
fi

if [ -z "${HOSTNAME}" ]
then
    HOSTNAME=$(hostname)
fi
export XTERM HOSTNAME

XTERMGEO_W=132
export XTERMGEO_W
XTERMGEO_H=40
export XTERMGEO_H
XTERMGEO_X=200
export XTERMGEO_X
XTERMGEO_Y=200
export XTERMGEO_Y
XTERMGEO="${XTERMGEO_W}x${XTERMGEO_H}+${XTERMGEO_X}+${XTERMGEO_Y}"
export XTERMGEO
case ${HOSTNAME} in
    *bldo* )
        NEWXCOLOR=red
        XTERMFONTS="-fa 'Monospace' -fs 10"
        ;;

    *bcpc* )
        NEWXCOLOR=wheat
        XTERMFONTS="-fa 'Monospace' -fs 10"
        ;;

    nylxdev* )
        NEWXCOLOR=darkblue
        XTERMFONTS=''
        ;;

    monolith* )
        NEWXCOLOR=black
        if [ "$XSERVER" = 'XWin' ]
        then
            XTERMFONTS="-fa 'Monospace' -fs 10"
        else
            ## Xming
            XTERMFONTS='-fn lucidasanstypewriter-14'
        fi
        ;;

    * )
        if "$HOME/personal/bin/iswsl"
        then
            NEWXCOLOR=black
            XTERMFONTS='-fn lucidasanstypewriter-10'
        else
            NEWXCOLOR=brightred
            XTERMFONTS=''
        fi
        ;;
esac

export NEWXCOLOR
export XTERMFONTS

## If we want to change git colors, then define the color assignments
## with a series of -c name=value assignments in an ennvar GIT_COLORS
## and make git be a function such that it calls '/the/real/git
## $GIT_COLORS "$@"'.

## See below, the section marked "Query the colors" to see how to maintain that
## for each new pair added here. These colors are decoded in 'newx'.
export forebackmap_grey='black,darkgrey'
export forebackmap_darkblue='wheat,darkblue'
export forebackmap_brightred='wheat,red'
export forebackmap_red='wheat,darkred'
export forebackmap_white='black,white'
export forebackmap_black='white,black'
export forebackmap_blue='white,steelblue'
export forebackmap_green='white,seagreen'
export forebackmap_wheat='black,wheat'
export forebackmap_orange='black,orange'
export forebackmap_yellow='black,yellow'
export forebackmap_pink='black,pink'
export forebackmap_brown='white,brown'
export forebackmap_choc='white,chocolate'

##
## Colors!
##

## Printable ANSI sequences

export ANSI_reset="\\e[0m"
export ANSI_bold="\\e[1m"
export ANSI_underscore="\\e[4m"
export ANSI_blink="\\e[5m"
export ANSI_reverse="\\e[7m"
export ANSI_concealed="\\e[8m"

export ANSI_FG_black="\\e[30m"
export ANSI_FG_red="\\e[31m"
export ANSI_FG_green="\\e[32m"
export ANSI_FG_yellow="\\e[33m"
export ANSI_BG_orange="\\e[38;5;208m"
export ANSI_FG_blue="\\e[34m"
export ANSI_FG_magenta="\\e[35m"
export ANSI_FG_cyan="\\e[36m"
export ANSI_FG_white="\\e[37m"

export ANSI_BG_black="\\e[40m"
export ANSI_BG_red="\\e[41m"
export ANSI_BG_green="\\e[42m"
export ANSI_BG_yellow="\\e[43m"
export ANSI_BG_orange="\\e[48;5;208m"
export ANSI_BG_blue="\\e[44m"
export ANSI_BG_magenta="\\e[45m"
export ANSI_BG_cyan="\\e[46m"
export ANSI_BG_white="\\e[47m"

##
## Query the colors.
##

## Make sure that the value of each entry below matches a color in one of the
## 'forebackmap_' variables above. In order to figure out a bg color:
##
## o add the fg, bg combo to a new forebackmap_<name> variable above.
## o reload this file.
## o call newx<name>.
## o in the new terminal, call newx. The rgb of the new bg color will be
##   spit out in an error message and then you can add it here.
export xterm_Xground_map_rgba9a9a9a9a9a9='grey'
export xterm_Xground_map_rgb000000008b8b='darkblue'
export xterm_Xground_map_rgbffff00000000='brightred'
export xterm_Xground_map_rgb8b8b00000000='red'
export xterm_Xground_map_rgbffffffffffff='white'
export xterm_Xground_map_rgb000000000000='black'
export xterm_Xground_map_rgb46468282b4b4='blue'
export xterm_Xground_map_rgb2e2e8b8b5757='green'
export xterm_Xground_map_rgbf5f5dedeb3b3='wheat'
export xterm_Xground_map_rgbffffa5a50000='orange'
export xterm_Xground_map_rgbffffffff0000='yellow'
export xterm_Xground_map_rgbffffc0c0cbcb='pink'
export xterm_Xground_map_rgba5a52a2a2a2a='brown'
export xterm_Xground_map_rgbd2d269691e1e='choc'

. ~/personal/functions/settitle
. ~/personal/functions/tickercfg
. ~/personal/functions/ticker
. ~/personal/functions/tickerkill

xset -b ## bell off

XTERMINIT_LOADED=1
export XTERMINIT_LOADED
