# -*- sh -*-

# xterminit

## WARNING: This script MUST be valid KORN SHELL.

## - No associative arrays.
## - No variables with - in them. Use _ instead.

## This script is run in the Bloomberg environment on dev machines under ksh
## before Chimera switches over to bash. Therefore we do not make any audit or
## controlfunc build calls. We call those in the caller of this in the *funcs
## tree again after chimera.

## init
hasx=0
if [ -z "$DISPLAY" ]
then
    export DISPLAY=:0.0
else
    hasx=1
fi

XSERVER=''
if [ "$(uname -o)" = 'Cygwin' ]
then
    hasXming=$(ps -aW | grep Xming.exe)
    if [ -n "$hasXming" ]
    then
        echo "Using Xming XServer"
        XSERVER='Xming'
        export XSERVER
    else
        ## Cygwin use only
        if [ -z "$(ps -a | grep XWin)" ]
        then
            if [ "$1" = '--verbose' ]
            then
                echo "Starting Cygwin XServer..."
            fi
            startxwin 2>/dev/null 2>/dev/null &
            XSERVER='XWin'
            export XSERVER
        fi
    fi
elif [ "$hasx" = '0' ]
then
    ## X server ping...
    xmodmap 1>/dev/null 2>/dev/null
    if (($?))
    then
        ## There is no xserver. Do not set any of this up.
        return 0 ## return, not exit because this script is meant to be 'dotted in'
    fi
fi

if [ -z "$XTERM" ]
then
    for i in /usr/bin/X11 /usr/bin /bin
    do
        if [ -z "$XTERM" ] && [ -e "$i/xterm" ]
        then
            XTERM="$i/xterm -sb -sl 40000"
        fi
    done
fi

if [ -z "$XTERM" ]
then
    echo "$(date) - $(hostname) - Cannot find an xterm to use. xterm setup stops." >> ~/xterminit.stop
    return 0
fi

if [ -z "${HOSTNAME}" ]
then
    HOSTNAME=`hostname`
fi
export XTERM HOSTNAME

XTERMGEOW=132
export XTERMGEOW
XTERMGEOH=40
export XTERMGEOH
XTERMGEOX=200
export XTERMGEOX
XTERMGEOY=200
export XTERMGEOY
XTERMGEO="-geometry ${XTERMGEOW}x${XTERMGEOH}+${XTERMGEOX}+${XTERMGEOY}"
export XTERMGEO
case ${HOSTNAME} in
    *bldo* )
        NEWXCOLOR=red
        XTERMFONTS="-fa 'Monospace' -fs 10"
        ;;

    *bcpc* )
        NEWXCOLOR=wheat
        XTERMFONTS="-fa 'Monospace' -fs 10"
        ;;

    nylxdev* )
        NEWXCOLOR=darkblue
        XTERMFONTS=''
        ;;

    monolith* )
        NEWXCOLOR=black
        if [ "$XSERVER" = 'XWin' ]
        then
            XTERMFONTS="-fa 'Monospace' -fs 10"
        else
            ## Xming
            XTERMFONTS='-fn lucidasanstypewriter-14'
        fi
        ;;

    * )
        NEWXCOLOR=brightred
        XTERMFONTS=''
esac

export NEWXCOLOR
export XTERMFONTS

## Set these up here because they use values set above
. ~/personal/functions/RXCmd
. ~/personal/functions/newx

## If we want to change git colors, then define the color assignments
## with a series of -c name=value assignments in an ennvar GIT_COLORS
## and make git be a function such that it calls '/the/real/git
## $GIT_COLORS "$@"'.

## See below, the section marked "Query the colors" to see how to maintain that
## for each new pair added here. These colors are decoded in 'newx'.
forebackmap_grey='black,darkgrey'
forebackmap_darkblue='wheat,darkblue'
forebackmap_brightred='wheat,red'
forebackmap_red='wheat,darkred'
forebackmap_white='black,white'
forebackmap_black='white,black'
forebackmap_blue='white,steelblue'
forebackmap_green='white,seagreen'
forebackmap_wheat='black,wheat'
forebackmap_orange='black,orange'
forebackmap_yellow='black,yellow'
forebackmap_pink='black,pink'
forebackmap_brown='white,brown'
forebackmap_choc='white,chocolate'

##
## Colors!
##

## Printable ANSI sequences

export ANSI_reset="\e[0m"
export ANSI_bold="\e[1m"
export ANSI_underscore="\e[4m"
export ANSI_blink="\e[5m"
export ANSI_reverse="\e[7m"
export ANSI_concealed="\e[8m"

export ANSI_FG_black="\e[30m"
export ANSI_FG_red="\e[31m"
export ANSI_FG_green="\e[32m"
export ANSI_FG_yellow="\e[33m"
export ANSI_FG_blue="\e[34m"
export ANSI_FG_magenta="\e[35m"
export ANSI_FG_cyan="\e[36m"
export ANSI_FG_white="\e[37m"

export ANSI_BG_black="\e[40m"
export ANSI_BG_red="\e[41m"
export ANSI_BG_green="\e[42m"
export ANSI_BG_yellow="\e[43m"
export ANSI_BG_blue="\e[44m"
export ANSI_BG_magenta="\e[45m"
export ANSI_BG_cyan="\e[46m"
export ANSI_BG_white="\e[47m"

##
## Query the colors.
##

## Make sure that the value of each entry below matches a color in one of the
## 'forebackmap_' variables above. In order to figure out a bg color, first add
## the fg, bg combo to the forebackmap_ variables above. Then call
## newx<name>. Then in the new terminal, just call newx. The rgb of the color
## will be spit out in an error message.
export xterm_Xground_map_rgba9a9a9a9a9a9='grey'
export xterm_Xground_map_rgb000000008b8b='darkblue'
export xterm_Xground_map_rgbffff00000000='brightred'
export xterm_Xground_map_rgb8b8b00000000='red'
export xterm_Xground_map_rgbffffffffffff='white'
export xterm_Xground_map_rgb000000000000='black'
export xterm_Xground_map_rgb46468282b4b4='blue'
export xterm_Xground_map_rgb2e2e8b8b5757='green'
export xterm_Xground_map_rgbf5f5dedeb3b3='wheat'
export xterm_Xground_map_rgbffffa5a50000='orange'
export xterm_Xground_map_rgbffffffff0000='yellow'
export xterm_Xground_map_rgbffffc0c0cbcb='pink'
export xterm_Xground_map_rgba5a52a2a2a2a='brown'
export xterm_Xground_map_rgbd2d269691e1e='choc'

. ~/personal/functions/xterm_background
. ~/personal/functions/xterm_foreground
. ~/personal/functions/xterm_Xground
. ~/personal/functions/settitle
. ~/personal/functions/tickercfg
. ~/personal/functions/ticker
. ~/personal/functions/tickerkill

XTERMINIT_LOADED=1
export XTERMINIT_LOADED
