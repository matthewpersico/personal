# -*- sh -*-

# xterminit

## Cygwin use only
startxserver() {
    if [ -z "$(ps -a | grep XWin)" ]
    then
        if [ "$1" = '--verbose' ]
        then
            echo "Starting Cygwin XServer..."
            startxwin 2>/dev/null 2>/dev/null &
            XSERVER='XWin'
        fi
    fi
}

## init
if [ -z "$DISPLAY" ]
then
    export DISPLAY=:0.0
fi

XSERVER=''
if [ "$(uname -o)" = 'Cygwin' ]
then
    hasXming=$(ps -aW | grep Xming.exe)
    if [ -n "$hasXming" ]
    then
        echo "Using Xming XServer"
        XSERVER='Xming'
    else
        startxserver --verbose
    fi
else
    ## X server ping...
    xmodmap 1>/dev/null 2>/dev/null
    if (($?))
    then
        ## There is no xserver. Do not set any of this up.
        return 0 ## return, not exit because this script is meant to be 'dotted in'
    fi
fi

if [ -z "$XTERM" ]
then
    for i in /bin /usr/bin /usr/bin/X11
    do
        if [ -z "$XTERM" ] && [ -e "$i/xterm" ]
        then
            XTERM="$i/xterm -ls -sb -sl 40000"
        fi
    done
fi

if [ -z "$XTERM" ]
then
    echo "$(date) - $(hostname) - Cannot find an xterm to use. xterm setup stops." >> ~/xterminit.stop
    return 0
fi

if [ -z "${HOSTNAME}" ]
then
    HOSTNAME=`hostname`
fi
export XTERM HOSTNAME

XTERMGEOW=132
XTERMGEOH=40
XTERMGEOX=200
XTERMGEOY=200
XTERMGEO="-geometry ${XTERMGEOW}x${XTERMGEOH}+${XTERMGEOX}+${XTERMGEOY}"
case ${HOSTNAME} in
    *bldo* )
        export NEWX=newxdarkred
        XTERMFONTS="-fa 'Monospace' -fs 10"
        ;;

    *bcpc* )
        export NEWX=newxgrey
        XTERMFONTS="-fa 'Monospace' -fs 10"
        ;;

    nylxdev* )
        export NEWX=newxdarkblue
        XTERMFONTS=''
        ;;

    monolith* )
        export NEWX=newxblack
        if [ "$XSERVER" = 'XWin' ]
        then
            XTERMFONTS="-fa 'Monospace' -fs 10"
        else
            ## Xming
            XTERMFONTS='-fn lucidasanstypewriter-14'
        fi
        ;;

    * )
        export NEWX=newxred
        XTERMFONTS=''
esac

alias newx="$NEWX "

## Set these up here because they use values set above
RXCmd ()
{
    local HOST="${1}"
	if [ -z ${HOST} ]
	then
		echo "Error: hostname not specified."
	else
		shift 1
		local XARGS="${*}"
		if [ -z "${XARGS}" ]
		then
			XARGS="$XTERMGEO"
		fi
		if [ "${HOST}" = "${HOSTNAME}" ]
		then
			${XTERM} -display ${DISPLAY} -name ${HOST} ${XARGS} &
		else
			local XCOOKIE=`/usr/bin/X11/xauth list ${DISPLAY}`
            #					${XARGS} >/dev/null 2>&1 &
            ssh ${HOST} "(
                                  PATH=$PATH:/usr/bin/X11
                                  DISPLAY=$DISPLAY
                                  export PATH DISPLAY
                                  xauth add ${XCOOKIE} >> ~/inlog 2>&1
                                  /usr/bin/nohup ${XTERM} -name ${HOST} \
                                                 ${XARGS} >> ~/inlog 2>&1 &
                                 )" &
		fi
	fi
}

newxguts ()
{
    local count=1
    local xtermgeow=$XTERMGEOW
    local checkargs=1
    while ((checkargs))
    do
        case $1 in
            w )
                ## wide
                ((xtermgeow*=2)) ; shift ;;
            n )
                ## narrow
                ((xtermgeow/=2)) ; shift ;;
            s )
                ## std
                ((xtermgeow+-0)) ; shift ;;
            [0-9]* )
                ## number of xterms to spawn
                count=$1 ; shift ;;
            * )
                ## We're done
                checkargs=0 ;;
        esac
    done
    local i=0
    while ((i<count))
    do
        local xtermgeo="-geometry ${xtermgeow}x${XTERMGEOH}+$((XTERMGEOX+(i*72)))+$((XTERMGEOY+(i*72)))"
        RXCmd ${HOSTNAME} $XTERMGEO $XTERMFONTS $@ $xtermgeo
        ((i+=1))
        sleep .05 ## Just enough to space out the &-ed invocations so that they
                  ## do not randomly appear, but rather appear in a nice
                  ## cascade.
    done
}

## If we want to change git colors, then define the color assignments
## with a series of -c name=value assignments in an ennvar GIT_COLORS
## and make git be a function such that it calls '/the/real/git
## $GIT_COLORS "$@"'.

newxgrey ()
{
	export NEWX=newxgrey
    export GREP_COLORS='ln=42'
    newxguts ${1:-1} ${2:-s} -fg black -bg darkgrey
}

newxdarkblue ()
{
	export NEWX=newxdarkblue
    unset GREP_COLORS
    newxguts ${1:-1} ${2:-s} -fg wheat -bg darkblue
}

newxred ()
{
	export NEWX=newxred
    unset GREP_COLORS
    newxguts ${1:-1} ${2:-s} -fg wheat -bg red
}

newxdarkred ()
{
	export NEWX=newxdarkred
    unset GREP_COLORS
    newxguts ${1:-1} ${2:-s} -fg wheat -bg darkred
}

newxwhite ()
{
	export NEWX=newxwhite
    unset GREP_COLORS
    newxguts ${1:-1} ${2:-s} -fg black -bg white
}

newxblack ()
{
	export NEWX=newxblack
    unset GREP_COLORS
    newxguts ${1:-1} ${2:-s} -fg white -bg black
}

newxblue ()
{
	export NEWX=newxblue
    unset GREP_COLORS
    newxguts ${1:-1} ${2:-s} -fg black -bg steelblue
}

newxgreen ()
{
	export NEWX=newxgreen
    unset GREP_COLORS
    newxguts ${1:-1} ${2:-s} -fg black -bg seagreen
}

perlx ()
{
    ## For starting up windows for forked Perl programs in debugger to
    ## attach to.
    xterm -e sh -c 'tty;sleep 99999999' &
}
