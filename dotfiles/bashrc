#!/usr/bin/env bash
# shellcheck disable=SC1090 #https://github.com/koalaman/shellcheck/wiki/SC1090

# .bashrc

# ~/.bashrc runs ONLY on non-login subshells! (different from ksh); add lines
# here and in all .bashrc* files very carefully as this may execute when you
# don't expect them to.
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
## How to plug in (monkeypatch) set -x, VERBOSE_RC, etc, if needed
[[ -e "${TILDAE}/bashrc.monkeypatch" ]] && . "${TILDAE}/bashrc.monkeypatch"

# CRON def - duplicated elsewhere
[[ -z "$CRON" ]] && \
    CRON=$(~/personal/bin/running_under_cron && echo true || echo false) && \
    export CRON

bashrc_echo=0
if [[ "$CRON" = 'false' ]] && [[ -n "$VERBOSE_RC" ]]; then
    echo "$(date): (SHLVL=$SHLVL): ~/.bashrc is running..."
    bashrc_echo=1
fi

# User specific environment and startup programs. The main one is the personal
# one, which is '~/.bashrc.${USER}'. All the rest ( ~/.bashrc.${USER}*) will
# sort after the first one, so make sure they name-sort in the order you want
# them to.
for b in ~/.bashrc."${USER}"*; do
    [[ -e "${b}" ]] || continue # Make sure the glob isn't empty
    if [[ -e "${b}.skip" ]]; then
        echo "Skipping ${b} because ${b}.skip found" >&2
    else
        var=BASHRC_SKIP_$(basename "${b}" | sed 's/\./_/g')
        var=${var^^}
        val="$(eval echo \$"$var")"
        if [[ -n "$val" ]]; then
            echo "Skipping ${b} because $var exists (value $val)" >&2
        else
            . "${b}"
        fi
    fi
done

if ((bashrc_echo == 1)); then
    echo "$(date): ~/.bashrc has run"
fi
