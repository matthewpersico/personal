#!/usr/bin/env bash

## .bashrc
# ~/.bashrc runs ONLY on non-login subshells! (different from ksh)
# add lines here very carefully as this may execute when you don't i
# expect them to
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
## How to plug in (monkeypatch) set -x, ALLFUNCS_PROFILE, etc, if needed
[ -e "/tmp/bashrc.${USER}" ] && ". /tmp/bashrc.${USER}"
# shellcheck disable=SC1090
[ -e "$HOME/bashrc.${USER}.monkeypatch" ] && . "$HOME/bashrc.${USER}.monkeypatch"

[ -z "$CRON" ] && \
    CRON=$(~/personal/bin/running_under_cron && echo true || echo false) && \
    export CRON

[ "$CRON" = 'false' ] && [ -n "$ALLFUNCS_PROFILE" ] && \
    echo "$(date): ~/.bashrc is running..."

# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# set a restrictive umask
umask 002

# if chimera generated aliases exist, pull them into the current ENV
if [ -f ~/.bbalias ]
then
    # shellcheck disable=SC1090
    . ~/.bbalias
else
    ## Probably not on a BB chimera machine; follow normal bash githosts.
    # Source global definitions
    if [ -f /etc/bashrc ]; then
        # shellcheck disable=SC1091
	    . /etc/bashrc
    fi

    # Uncomment the following line if you don't like systemctl's auto-paging feature:
    # export SYSTEMD_PAGER=

    # User specific aliases and functions
fi

## Aliases
_bashrc_alias_init_list='hist perl misc yum apt dpkg tmux'
for _bashrc_alias in ${_bashrc_alias_init_list}
do
    ! $CRON && [ -n "$ALLFUNCS_PROFILE" ] && \
        echo "$(date): Loading ${_bashrc_alias}.alias"
    # shellcheck disable=SC1090
    . "$PERSONALBIN/${_bashrc_alias}.alias"
done

##############################################################################
## Prompt
##

PROMPT_COMMAND=$(declare -F | grep bash_history_sync| sed 's/.* //' )
_PS1_lcstatus='\n[\$? = $?]\n' ## Status of the last command prior to this prompt
_PS1_xterm_title_cmds=''
if [[ -z $INSIDE_EMACS ]]
then
    _PS1_xterm_title_cmds='\[\e]0;\u@\h:\w\a\]'
fi
_PS1_where='where   : \u@\h'
_PS1_since="since   : $(date +'%a %b %d %H:%M:%S')"
_PS1_as_of='as-of   : \d \t'

_PS1_local_perl ()
{
    echo -n "perl    : $PERL5LIB_ROOT"
}

_PS1_tmux ()
{
    declare tmux_count=0
    type -P tmux 1>/dev/null 2>&1 && tmux_count=$(wc -l < <(tmux list-sessions 2>/dev/null))
    ((tmux_count)) && echo && echo -n "tmux    : $tmux_count"
}
# shellcheck disable=SC2034 #https://github.com/koalaman/shellcheck/wiki/SC2034
typeset -fx _PS1_tmux

_PS1_pyvenv ()
{
    [[ -n $VIRTUAL_ENV ]] && echo && echo -n "pyvenv : $VIRTUAL_ENV"
}
# shellcheck disable=SC2034 #https://github.com/koalaman/shellcheck/wiki/SC2034
typeset -fx _PS1_pyvenv

_PS1_from_branch ()
{
    # shellcheck disable=SC2155 #https://github.com/koalaman/shellcheck/wiki/SC2155
    declare b=$(git repo ina && git config --value-only  --get-regexp "branch.$(git branch --current).*from-branch")
    [[ -n $b ]] && echo -n " (from $b)"
}
# shellcheck disable=SC2034 #https://github.com/koalaman/shellcheck/wiki/SC2034
typeset -fx _PS1_from_branch

# shellcheck disable=SC2089,SC2016 #https://github.com/koalaman/shellcheck/wiki/SC2089,SC2016
_PS1_git='$(__git_ps1 "\nbranch  : %s")$(_PS1_from_branch)$(git-stash-get-count -no0 "\nstashes : ")$(git-get-default-remote "\nremote  : ")'
_PS1_pwd='pwd     : \w'
_PS1_pid='[$$]'

# Multiple items on the same line because they are optional and so provide
# their own newlines
# shellcheck disable=SC2089 #https://github.com/koalaman/shellcheck/wiki/SC2089
PS1_FULL="${_PS1_lcstatus}
${_PS1_xterm_title_cmds}${_PS1_where}
${_PS1_since}
${_PS1_as_of}
\$(_PS1_local_perl)\$(_PS1_tmux)\$(_PS1_pyvenv)${_PS1_git}
${_PS1_pwd}
${_PS1_pid} \$ "
# shellcheck disable=SC2090 #https://github.com/koalaman/shellcheck/wiki/SC2090
export PS1_FULL

PS1_SHORT='\w [$$] $ '
export PS1_SHORT

PS1_TINY='$ '
export PS1_TINY

# Default prompt.
if [[ -z $DPKG_ENV_SANITIZED ]]
then
    ## Bloomberg stuff.
    export PS1="$PS1_FULL"
fi

# You can switch between prompts with the 'switch-ps1' command.

##
## End of Prompt
##############################################################################

for b in ~/.bashrc."${USER}"*
do
    if [ -e "${b}" ]
    then
        if [ -e "${b}.skip" ]
        then
            echo "Skipping $b because ${b}.skip found" >&2
        else
            # shellcheck disable=SC1090
            . "$b"
        fi
    fi
done

# Conveniences
alias cvs='echo cvs? Are you nuts? - Try again!'
alias dir='ls -la '
alias dirt='ls -lat '
alias dirrt='ls -lart '
alias envg='env | grep '
alias setg='set | grep '
alias allg='(env && set) | grep '
alias rm='rm -i '
alias mydiff='diff -U3 '
alias sidediff='diff -w --side-by-side --suppress-common-lines '
alias mopquota='df -h '
alias showfunc='type '
alias grepnc='grep --color=never'
alias gitgo='git go '

# Fat finger protection
alias vf='echo cd, you moron; cd '
alias fit='echo dir, you moron; dir '

[ "$CRON" = 'false' ] && [ -n "$ALLFUNCS_PROFILE" ] && \
        echo "$(date): ~/.bashrc has run"
