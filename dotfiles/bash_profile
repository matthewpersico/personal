#!/usr/bin/env bash
# shellcheck disable=SC1090 #https://github.com/koalaman/shellcheck/wiki/SC1091
# shellcheck disable=SC1091 #https://github.com/koalaman/shellcheck/wiki/SC1091

# bash_profile
## Linked by ~/.bash_profile

## How to tell if we are running during profile setup or not
RUNNING_IN_BASH_PROFILE=1
export RUNNING_IN_BASH_PROFILE
# CRON def, must be before anything that can reference it. It should be set in
# your contab to the word 'true'. You can then check with an if statement:

#   if $CRON; then
#   if ! $CRON; then

# Each of these will end up executing the command 'true' or 'false' which will
# set $? to The Right Value.
[[ -z "$CRON" ]] && CRON=false;
export CRON

## For use under sudo
if [[ "$1" = '--tildae' ]]; then
    export TILDAE=$2; shift; shift;
    echo "Base for this profile is overriden to TILDAE=${TILDAE}"
else
    export TILDAE=$HOME
fi

## It's shells all the way down...
MASTER_SHLVL=$SHLVL
export MASTER_SHLVL

## How to plug in (monkeypatch) set -x, VERBOSE_RC, etc, if needed
[[ -x "$HOME/bash_profile.monkeypatch" ]] && . "$HOME/bash_profile.monkeypatch"

"$HOME/personal/bin/monkeytell" \
    "$VERBOSE_PROFILE" "$HOME/.bash_profile" 'start'

# User specific environment and startup programs. The main one is the personal
# one, which is '~/.profile.${USER}'. All the rest ( ~/.profile.${USER}*) will
# sort after the first one, so make sure they name-sort in the order you want
# them to.
for p in ~/.profile."${USER}"*; do
    [[ -e "${p}" ]] || continue # Make sure the glob isn't empty
    if [[ -e "${p}.skip" ]]; then
        echo "Skipping ${p} because ${p}.skip found" >&2
    else
        var=PROFILE_SKIP_$(basename "${p}" | sed 's/\./_/g')
        var=${var^^}
        val="$(eval echo \$"$var")"
        if [[ -n "$val" ]]; then
            echo "Skipping ${p} because $var exists (value $val)" >&2
        else
            . "${p}"
        fi
    fi
done

# Get the aliases and functions. We don't run other bashrcs here; we do that in
# .bashrc so that under a subshell they all get read.
if ! $CRON && [[ -f ~/.bashrc ]]; then
    . ~/.bashrc
fi

"$HOME/personal/bin/monkeytell" \
    "$VERBOSE_PROFILE" "$HOME/.bash_profile" 'end'

unset RUNNING_IN_BASH_PROFILE
