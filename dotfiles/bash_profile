## -*- sh -*-

# .bash_profile
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
## How to plug in (monkeypatch) set -x, ALLFUNCS_PROFILE, etc, if needed
[ -e /tmp/bash_profile.${USER} ] && . /tmp/bash_profile.${USER}
[ -e $HOME/bash_profile.${USER}.monkeypatch ] && .  $HOME/bash_profile.${USER}.monkeypatch

bash_profile_echo=0
~/personal/bin/running_under_cron
if (($? != 0)) && [ -n "$ALLFUNCS_PROFILE" ]
then
    echo "$(date): ~/.bash_profile is running..."
    bash_profile_echo=1
fi

# User specific environment and startup programs. The main one is the personal
# one, which is '~/.profile.${USER}'. All the rest ( ~/.profile.${USER}*) will
# sort after the first one, so make sure they name-sort in the order you want
# them to.
for p in ~/.profile.${USER}*
do
    if [ -e ${p}.skip ]
    then
        echo "Skipping $p because ${p}.skip found" >&2
    else
        var=PROFILE_SKIP$(basename $p | tr '[a-z]' '[A-Z]' | sed 's/\./_/g')
        val="$(eval echo \$$var)"
        if [ -n "$val" ]
        then
            echo "Skipping $p because $var exists (value $val)" >&2
        else
            . $p
        fi
    fi
done

# Get the aliases and functions. We don't run other bashrcs here; we do that in
# .bashrc so that under a subshell they all get read.
if ! $CRON && [ -f ~/.bashrc ]; then
    . ~/.bashrc
fi

if ((bash_profile_echo == 1))
then
    echo "$(date): ~/.bash_profile has run"
fi
