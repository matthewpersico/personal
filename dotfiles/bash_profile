#!/usr/bin/env bash
# shellcheck disable=SC1090 #https://github.com/koalaman/shellcheck/wiki/SC1091
# shellcheck disable=SC1091 #https://github.com/koalaman/shellcheck/wiki/SC1091

# .bash_profile
# =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
## How to plug in (monkeypatch) set -x, VERBOSE_RC, etc, if needed
[[ -x "$HOME/bash_profile.monkeypatch" ]] && . "$HOME/bash_profile.monkeypatch"

# CRON def - duplicated elsewhere
[[ -z "$CRON" ]] && \
    CRON=$(~/personal/bin/running_under_cron && echo true || echo false) && \
    export CRON

bash_profile_echo=0
if [[ "$CRON" = 'false' ]] && [[ -n "$VERBOSE_PROFILE" ]]; then
    echo "$(date): (SHLVL=$SHLVL): ~/.bash_profile is running..."
    bash_profile_echo=1
fi

# User specific environment and startup programs. The main one is the personal
# one, which is '~/.profile.${USER}'. All the rest ( ~/.profile.${USER}*) will
# sort after the first one, so make sure they name-sort in the order you want
# them to.
for p in ~/.profile."${USER}"*; do
    [[ -e "${p}" ]] || continue # Make sure the glob isn't empty
    if [[ -e "${p}.skip" ]]; then
        echo "Skipping ${p} because ${p}.skip found" >&2
    else
        var=PROFILE_SKIP_$(basename "${p}" | sed 's/\./_/g')
        var=${var^^}
        val="$(eval echo \$"$var")"
        if [[ -n "$val" ]]; then
            echo "Skipping ${p} because $var exists (value $val)" >&2
        else
            . "${p}"
        fi
    fi
done

# Get the aliases and functions. We don't run other bashrcs here; we do that in
# .bashrc so that under a subshell they all get read.
if ! $CRON && [[ -f ~/.bashrc ]]; then
    . ~/.bashrc
fi

if ((bash_profile_echo == 1)); then
    echo "$(date): ~/.bash_profile has run"
fi
