# -*- sh -*-

# <Function Class: git>
# <Function Justification: none>

git-clone-usage ()
{
    echo "${FUNCNAME[0]} \"$@\" ## $(date +%Y%m%d%H%M%S)" >> ${HOME}/personal/data/funcsaudit ## This is audit
    local cmd=$1;shift
    local protocol=$1
    local protocolarg
    local protocolurl
    if [ -z "$protocol" ]
    then
        protocolarg='<PROTOCOLe>'
        protocolurl='<PROTOCOL_URLe>'
    else
        protocolarg=''
        protocolurl=$(kvget gitfuncs_gitsvcs $1)
    fi

    cat <<EOUSAGE
Usage: $cmd $protocolarg [-y] [-t] [--triangle=upstream-namespace] namespace repo
       $cmd $protocolarg [-y] [-t] [--triangle=upstream-namespace] namespace/repo

       o Clones ${protocolurl}namespace/repo to a directory path
               $gitfuncs_gitroot/$protocol/namespace/repo.
         Directory $gitfuncs_gitroot/$protocol must already exist.

       o Sets up a wt subdir for worksapces.

       -y
          Answer yes to any prompts. Useful for automation.

       -t
          Resets the timestamps on the files to their commit times.

       --triangle=upstream-namespace
          Use this if namespace/repo fork of upstream-namespace/repo
          and you want to setup the triangle workflow
          so that master pulls on this clone are from upstream-namespace/repo.
          *Note* - Only specify the upstream namespace. We require that
                   the two repo names match. This keeps things organized.
EOUSAGE
    return $OK
}
