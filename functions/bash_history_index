#!/usr/bin/env bash

# <Function Class: hist>
# <Function Justification: Optimzation: called every prompt print.>

bash_history_index ()
{
    local index_file
    index_file="$HISTDIR/.histindex"
    if [[ $1 == '--outfile' ]]; then
        index_file="$2"
        shift; shift;
    fi
    local index_lock=${index_file}.lock
    [[ ! -f "$index_lock" ]] && touch "$index_lock"

    local -a files=("$@")
    local argcount="${#files[@]}"
    ((argcount == '0')) && files=("$HISTFILE")
    local i
    for i in "${files[@]}"; do
        (( argcount > 0 )) && echo "$i..."
        local start
        start=$(head -1 "$i")
        local end
        end=$(tail -2 "$i" | head -1)

        if type flock &>/dev/null; then
            exec 201>"$index_lock"
            flock -x -w5 201 || (echo "Cannot lock $index_lock. Aborting" && return 1)
        elif type shlock &>/dev/null; then
            shlock -f "$index_lock" -p $$
        fi
        local my_index_file
        my_index_file=${index_file}.$(date +%s.%N).$$
        perl -MData::Dumper -e 'do $ARGV[0] if (-r $ARGV[0]);
 ($start=$ARGV[2])=~ s/#([0-9]+).*/$1/;
 ($end=$ARGV[3])=~ s/#([0-9]+).*/$1/;
 $index{$ARGV[1]}={start=>$start,end=>$end};
 print Data::Dumper->Dump([\%index],[qw(*index)])' \
             "$index_file" "$i" "$start" "$end" > "$my_index_file"
        \mv -f "$my_index_file" "$index_file"
        if type flock &>/dev/null; then
            flock -u 201
        elif type shlock &>/dev/null; then
           rm -f "$index_lock"
        fi
    done
}
autotrack bash_history_index "$0"
