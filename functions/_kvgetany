# -*- sh -*-

# <Function Class: util>

_kvgetany ()
{
    echo "${FUNCNAME[0]} \"$@\" ## $(date +%Y%m%d%H%M%S)" >> ${HOME}/personal/data/funcsaudit ## This is audit
    local columns=$1; shift

    local endofopts=0
    local sort=''
    local where=''
    local separator=''
    while [[ "$1" =~ ^- ]] && ((endofopts==0))
    do
        case "$1" in
            --sort ) sort='order by 1'; shift ;;
            --rev* ) sort='order by 1 desc'; shift ;;
            --sep* ) separator="--separator $2"; shift; shift ;;
            --     ) endofopts=1; shift;;
            -*     ) echo "$1 is an invalid option."; return 1;;
        esac
    done

    local db=$1; shift

    local dbfile=~/.kvdbs/$db

    if [ ! -e $dbfile ]
    then
        echo "ERROR - kv store name $db does not exist"
        return 1
    fi

    local key="$1"; shift
    local where=''

    [ -n "$key" ] && where="where key like '$key'" ## These databases should be
                                                   ## small enough that using
                                                   ## like in all cases will be
                                                   ## fast enough. Maybe the
                                                   ## SQL engine will convert a
                                                   ## like with no wildcards to
                                                   ## an equal anyway.

    sqlite3 --noheader $separator $dbfile "select $columns from keyval $where $sort"

    return $?
}


