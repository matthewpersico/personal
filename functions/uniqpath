# -*- sh -*-
# shellcheck shell=bash
###############################################################################
#
# Name:        uniqpath
#
# Author:      Matthew Persico (matthew.persico@gmail.com)
#
# Copyright:   Matthew Persico (matthew.persico@gmail.com)
#
# Derived from work by Stephen Collyer (scollyer@netspinner.co.uk),
#                      Copyright: Netspinner Ltd 2000-2003
#
# <Function Class: path functions>
# <Function Justification: env mod>
###############################################################################

uniqpath ()
{
    ###########################################################################
    # local variables
    ###########################################################################

    typeset options_shift_val options_missing_arg options_unknown_opt
    typeset options_num_args_left
    typeset opt_h opt_p opt_s
    typeset opt_x opt_v
    typeset opt_d
    typeset sep=:

    typeset pathvar TEMP

    pathfunc_usage_init
    typeset -a USAGE
    USAGE=(
        "uniqpath [-h] [-s separator] [-x] [-v] [-d] [[-p] pathvar] "
        "Removes subsequent occurrances of path elements."
        "$USAGE_OPT_P1"
        "$USAGE_OPT_P2"
        "$USAGE_OPT_P3"
        "$USAGE_OPT_P4O"
        "$USAGE_OPT_P5"
        "$USAGE_OPT_S"
        "-d - after uniquing each dir, only keep if the dir exists"
        "$USAGE_OPT_X"
        "$USAGE_OPT_V"
        "$USAGE_OPT_H"
    )

    ###########################################################################
    # handle options
    ###########################################################################

    options "hp:ds:xv" "$@"
    shift "$options_shift_val"

    if [[ -n "$opt_h" ]]; then
        pathfunc_usage "${USAGE[@]}"
        return
    fi
    if [[ -n "$options_missing_arg" ]]; then
        pathfunc_usage "${USAGE[@]}" "Missing argument for -$options_missing_arg"
        return
    fi
    if [[ -n "$options_unknown_opt" ]]; then
        pathfunc_usage "${USAGE[@]}" "Unknown option -$options_unknown_opt"
        return
    fi
    if [[ "$options_num_args_left" -eq 1 ]]; then
        pathvar=$1
    fi

    [[ -n "$opt_s" ]] && sep=$opt_s;
    [[ -n "$opt_p" ]] && pathvar=$opt_p # use specified pathvar
    [[ -z "$pathvar" ]] && pathvar=PATH  # default

    ###########################################################################
    # main
    ###########################################################################

    # Long path variable values may overflow arg list limits on some Unices. It
    # is also difficult, in a series of pipes, to deal with paths that have
    # spaces in them . Therefore we use an intermediate file.
    TEMP=/tmp/uniqpath.out.$$
    # Put the individual path elements out to a file, one per line. Any
    # consecutive separators get dropped and we add the gsub() call to
    # eliminate consecutive subdir separators.
    listpath -s "${sep}" -p "$pathvar" \
        | awk '{gsub( /\/(\/+)/, "/", $0); seen[$0]++; if (seen[$0]==1){print}}' > $TEMP
    local newvalue
    local line
    while read -r line; do

        # If the directory doesn't exist and we have the "don't include
        # non-existent directories flag' thrown, don't add it back to the path.
        [[ ! -d "$line" ]] && [[ -n "$opt_d" ]] && continue
        newvalue="${newvalue}${sep}${line}"
    done < $TEMP
    eval "$pathvar"="'${newvalue:1}'" ## Eliminate suplerfluous lead separator
    /bin/rm -f $TEMP
    [[ -n "$opt_v" ]] && listpath -s "${sep}" -p "$pathvar"
    # shellcheck disable=SC2163
    [[ -n "$opt_x" ]] && export "$pathvar"
}
autotrack uniqpath "$0"
# emacs
# Local Variables:
# mode: sh
# End:
