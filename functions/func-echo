#!/usr/bin/env bash

# <Function Class: util>
# <Function Justification: uses function env>

func-echo ()
{
    declare moreopts=1
    declare -a cmd_echo_opts
    while [[ "$1" =~ ^- ]] && ((moreopts))
    do
        declare original="$1"
        declare option
        option=$(dashstripper "$original")
        shift

        case $option in
            i | o )
                echo "-i and -o are no longer used. Ignored..."
                ;;
            h | help )
                func-usage func-echo
                exit 0
                ;;
            -- )
                moreopts=0
                ;&
            head | title | n | c )
                cmd_echo_opts+=("--$option");
                ;;
        esac
    done

    if [ -n "$*" ]
    then
        cmd-echo "${cmd_echo_opts[@]}" "$@"
    fi
}

return 0 ## USAGE guard during sourcing this file.

:<<'__PODUSAGE__'
=head1 NAME

func-echo - label echos in functions with some extra adornments

=head1 SYNOPSIS

 ## To write:
 func-echo [--head] [--title] [-n] [-c] -- "text" ["text"...]

 ## This text:
 func-echo -h|--help

=head1 DESCRIPTION

Call 'func-echo' to print the first "text" on a line with a reversed-color
prefix. Print subsequent lines indented with reversed color spaces, indicating
continuation. The name of the calling script is no longer printed. Too
difficult get it right with a mixture of functions and scripts at different
nesting levels. It is sufficient just to be able to pick out our messages vs
those printed by the utilities we call.

=head1 OPTIONS

=item --

Indicates end of options to 'func-echo' so that all subsequent arguments are
taken as text to print. Technically not necessary UNLESS your first argument to
print happens to match one of the options to 'func-echo'.

=item --head

Print a blank line for spacing before printing any text.

=item --title

Print a blank line for spacing before printing any text and then print the
entire first text line as reversed, not just the prefix.

=item -n

Do not print a new line at the end of each line.

=item -c

Print the first "text" element as a continuation line.

=back

=cut

__PODUSAGE__

#  LocalWords:  funcname shellcheck util func
