# -*- sh -*-

# <Function Class: perl>
# <Function Justification: none>

perlx ()
{
    echo "${FUNCNAME[0]} \"$@\" ## $(date +%Y%m%d%H%M%S)" >> ${TILDAE:-$HOME}/personal/data/funcsaudit ## This is audit
    ## For starting up windows for forked Perl programs in debugger to
    ## attach to.
    local countem=$1; ## Specify as -x, like an option or x, like an arg
    ((countem)) || countem=1
    ((countem<0)) && ((countem=countem*-1)) ## if -x, make it positive
    while ((countem>0))
    do
        xterm -e sh -c 'echo This terminal was started to receive a forked perl debugger process.;
echo Set;
echo \$DB::fork_TTY=q\($(tty)\);
echo in the debugger before you reach the fork.;
echo Consider examining the value of the TERM variable;
echo to make sure it is something that perl5db.pl;
echo understands.;
echo Sleeping 99999999 starting at $(date);echo -e "\e]0;$(tty)\a
     ";sleep 99999999' &
        ((countem-=1))
    done
}
