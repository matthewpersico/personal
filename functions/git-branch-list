# -*- sh -*-

# <Function Class: git

git-branch-list ()
{
    echo "${FUNCNAME[0]} \"$@\" ## $(date +%Y%m%d%H%M%S)" >> ${TILDAE:-$HOME}/personal/data/funcsaudit ## This is audit
    ##@@ 0001||group||git-branch-list||

    local strip=0
    local remote=''
    local OPTSARGS=$(getoptp -o ra --long strip,nostrip,remote,all -n $FUNCNAME -- "$@")
    status=$?
    ((status != 0)) && func-echo "Exiting." && return $status
    eval set -- "$OPTSARGS"
    while true
    do
        case "$1" in
            -a | --all) remote='-a'; shift;;
            -r | --remote) remote='-r'; shift;;
            --strip) strip=1; shift;;
            --nostrip) strip=0; shift;;
            --) shift; break ;; ## end of opts, remaining $*, if any, are args
            *) echo "Internal error!"; return $NOT_OK ;;
        esac
    done

    ## Update the local branches with remote. Shunt away the output - not
    ## needed, interferes with functions that call git-branch-list and read the
    ## output.
    git remote update > /dev/null

    local opts="--list $remote"
    if ((strip))
    then
        git branch --no-color $opts | sed 's/^[ *] //' | sed 's/ .*//'
    else
        git branch $opts
    fi

}


