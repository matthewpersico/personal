# -*- sh -*-

# <Function Class: git

git-rename-worktree ()
{
    echo "${FUNCNAME[0]} \"$@\" ## $(date +%Y%m%d%H%M%S)" >> ${TILDAE:-$HOME}/personal/data/funcsaudit ## This is audit
    ##@@ 0001||group||git-rename-worktree||

    local usage_func="${FUNCNAME}-usage"

    if (($#!=2))
    then
        $usage_func
        return $NOT_OK
    fi

    local status
    local old_worktree_path=$(realpath $1)
    local old_worktree=$(basename $1)
    shift
    local new_worktree=$1
    shift
    if [ ! $(basename $new_worktree) = $new_worktree ]
    then
        func-echo "Cannot move out of parent directory"
        return $NOT_OK
    fi

    if (($#))
    then
        $usage_func
        echo "       argument(s) '$*' are illegal"
        return $NOT_OK
    fi

    local new_worktree_path=$(dirname $old_worktree_path)/$new_worktree
    _git-cd-to $old_worktree_path
    local cb=$(git-get-current-branch)
    if [ "$cb" = "$old_worktree" ]
    then
        func-echo "Renaming branch first..."
        git-rename-branch $old_worktree $new_worktree
        status=$?
        if ((status != $OK ))
        then
            _git-cd-unwind
            return $NOT_OK
        fi
    fi

    ## Get the metadata directory for this worktree
    local metadatadir=$(cat .git | grep -E '^gitdir:' | sed 's/.* //')

    ## Get the metadata files for this worktree
    local heregit=$(pwd)/.git
    local theregit=${metadatadir}/gitdir

    ## Change the metadata files
    perl -pi -e "s/$old_worktree/$new_worktree/g" $heregit $theregit \
        || return $NOT_OK

    ## Move the metadata dir
    local newmetadatadir=$(dirname $metadatadir)/$new_worktree
    mv $metadatadir $newmetadatadir || return $NOT_OPK

    ## Move us
    _git-cd-to ..
    mv $old_worktree_path $new_worktree_path || return $NOT_OPK

    ## Clean up stuff
    git-go-set

    ## Go to new worktree
    builtin \cd $new_worktree_path
    return $?
}


