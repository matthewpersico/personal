# -*- sh -*-
# shellcheck shell=bash

# pipe-check

# <Function Class: n/a>
# <Function Justification: must be in-process>

pipe-check ()
{
    # NO_BRAND
    local -a pipestatus=("${PIPESTATUS[@]}")

    local opt=$1

    if [[ "$opt" =~ ^-+h ]]; then
        bash-usage pipe-check
        return 0
    fi

    idx=0
    for cmdstatus in "${pipestatus[@]}"; do
        if ((cmdstatus)); then
            cmd-echo --ec --id 'pipe-check' "command #$idx will now exit $cmdstatus"
            exit "$cmdstatus"
        fi
    done
    return 0
}
autotrack pipe_check "$0"
:<<'__PODUSAGE__'
=head1 NAME

pipe-check - process status of each command in a pipeline

=head1 SYNOPSIS

 command1 | command 2 | ...
 pipe-check

=head1 DESCRIPTION

If any of the commands in the prior pipeline exit non-zero, call 'exit' with the status of the first one that does so. Otherwise, return.

=head1 OPTIONS

=over

=item --help

Show this help text.

=back

=cut

__PODUSAGE__
