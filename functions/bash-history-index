# -*- sh -*-
# shellcheck shell=bash

# bash-history-index

# <Function Class: hist>
# <Function Justification: Optimzation: called every prompt print.>

bash-history-index ()
{
    local index_file
    index_file="$HISTDIR/.histindex"

    if [[ $1 == '--outfile' ]]; then
        index_file="$2"
        shift; shift;
    fi

    local -a files=("$@")
    local argcount="${#files[@]}"
    local verbose=1
    ((argcount == 0)) && files=("$HISTFILE") && argcount=1 && verbose=0
    local i
    for i in "${files[@]}"; do
        if ((verbose==1)); then
            ((argcount-=1))
            echo "$i... ($argcount remaining)"
        fi

        local start
        start=$(head -1 "$i")
        local end
        end=$(tail -2 "$i" | head -1)


        local my_index_file
        my_index_file=${index_file}.$(date +%s.%N).$$

        perl -e '
 use Data::Dumper;
 use Fcntl qw(:flock);
 use File::Copy;

 if (-r $ARGV[0]) {
   open(FH,$ARGV[0]);
   flock(FH,LOCK_EX);
   do $ARGV[0];
 }

 ($start=$ARGV[2])=~ s/#([0-9]+).*/$1/;
 ($end=$ARGV[3])=~ s/#([0-9]+).*/$1/;
 $index{$ARGV[1]}={start=>$start,end=>$end};
 $Data::Dumper::Sortkeys=1;
 open(MFH, $ARGV[4]);
 print MFH Data::Dumper->Dump([\%index],[qw(*index)]);
 close(MFH);
 copy($ARGV[4], $ARGV[0]);
 flock(FH,LOCK_UN);
' "$index_file" "$i" "$start" "$end" "$my_index_file"

    done
}
autotrack bash-history-index "$0"
