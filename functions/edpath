###############################################################################
#
# Name:        edpath
#
# Author:      Matthew Persico (matthew.persico@gmail.com)
#
# Copyright:   Matthew Persico (matthew.persico@gmail.com)
#
# Derived from work by Stephen Collyer (scollyer@netspinner.co.uk),
#                      Copyright: Netspinner Ltd 2000-2003
#
# <Function Class: path functions>
# <Function Justification: env mod>
###############################################################################

edpath ()
{
    ###########################################################################
    # local variables
    ###########################################################################

    typeset options_shift_val options_missing_arg options_unknown_opt
    typeset options_num_args_left
    typeset opt_h opt_p opt_s
    typeset opt_x opt_v
    typeset sep=:

    typeset pathvar TEMP

    pathfunc_usage_init
    typeset -a USAGE
    i=0; USAGE[i]="edpath [-h] [-s separator] [-x] [-v] [[-p] pathvar]"
    ((i+=1)); USAGE[i]="Uses \$EDITOR (default: vi) to edit 'pathvar'."
    ((i+=1)); USAGE[i]="$USAGE_OPT_P1"
    ((i+=1)); USAGE[i]="$USAGE_OPT_P2"
    ((i+=1)); USAGE[i]="$USAGE_OPT_P3"
    ((i+=1)); USAGE[i]="$USAGE_OPT_P4O"
    ((i+=1)); USAGE[i]="$USAGE_OPT_P5"
    ((i+=1)); USAGE[i]="$USAGE_OPT_S"
    ((i+=1)); USAGE[i]="$USAGE_OPT_X"
    ((i+=1)); USAGE[i]="$USAGE_OPT_V"
    ((i+=1)); USAGE[i]="$USAGE_OPT_H"

    ###########################################################################
    # handle options
    ###########################################################################

    options "hp:s:xv" "$@"
    shift $options_shift_val

    if [ -n "$opt_h" ]
    then
        pathfunc_usage "${USAGE[@]}"
        return
    fi
    if [ -n "$options_missing_arg" ]
    then
        pathfunc_usage "$USAGE" "Missing argument for -$options_missing_arg"
        return
    fi
    if [ -n "$options_unknown_option" ]
    then
        pathfunc_usage "$USAGE" "Unknown option -$options_unknown_option"
        return
    fi
    if [ $options_num_args_left -eq 1 ]
    then
        pathvar=$1
    fi

    [ -n "$opt_s" ] && sep=$opt_s;
    [ -n "$opt_p" ] && pathvar=$opt_p
    [ -z "$pathvar" ] && pathvar=PATH

    ###########################################################################
    # main
    ###########################################################################

    TEMP=/tmp/edpath.out.$$
    listpath -s "${sep}" -p $pathvar > $TEMP
    ${EDITOR:-vi} $TEMP
    local newvalue
    local line
    while read line
    do
        [ -n "$newvalue" ] \
            && newvalue="${newvalue}${sep}${line}" \
                || newvalue="${line}"
    done < $TEMP
    eval $pathvar="'$newvalue'"
    /bin/rm -f $TEMP
    [ -n "$opt_v" ] && listpath -s "${sep}" -p $pathvar
    [ -n "$opt_x" ] && export $pathvar
}

# emacs
# Local Variables:
# mode: sh
# End:
