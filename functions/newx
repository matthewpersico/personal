# -*- sh -*-

# <Function Class: xterm>

newx ()
{
    echo "${FUNCNAME[0]} \"$@\" ## $(date +%Y%m%d%H%M%S)" >> ${HOME}/personal/data/funcsaudit ## This is audit
    local var
    local val
    local more_opts=1
    local count=1
    local xtermgeow=$XTERMGEOW
    while ((more_opts)) && [[ "$1" =~ ^- ]]
    do
        local original="$1"
        local option=$(dashstripper "$1")

        case $option in
            w )
                ## wide
                ((xtermgeow*=2)) ; shift ;;
            n )
                ## narrow
                ((xtermgeow/=2)) ; shift ;;
            s )
                ## std
                ((xtermgeow+-0)) ; shift ;;
            [0-9]* )
                ## number of xterms to spawn
                ((count=$1*-1)) ; shift ;;
            * )
                ## Is it a color?
                local bg=$(dashstripper $1)
                var="forebackmap_$bg"
                [ -n "${!var}" ] && shift || more_opts=0;;
        esac
    done

    [ -z "${!var}" ] && var="forebackmap_$(xterm_background)"
    local val=${!var}

    local i=0
    while ((i<count))
    do
        local xtermgeo="-geometry ${xtermgeow}x${XTERMGEOH}+$((XTERMGEOX+(i*72)))+$((XTERMGEOY+(i*72)))"
        echo  RXCmd ${HOSTNAME} $XTERMGEO $XTERMFONTS $@ -fg "${val%%,*}" -bg "${val##*,}" $xtermgeo
        RXCmd ${HOSTNAME} $XTERMGEO $XTERMFONTS $@ -fg "${val%%,*}" -bg "${val##*,}" $xtermgeo
        ((i+=1))
        sleep .05 ## Just enough to space out the &-ed invocations so that they
                  ## do not randomly appear, but rather appear in a nice
                  ## cascade.
    done
}
