# -*- sh -*-
# git-status-with-changelog

##@@ 0001||group||git-status-with-changelog||Mix in $GITFUNCS_CHANGELOG_NAME text with corresponding file entries in git status.

# shellcheck disable=SC1090
source "$BASH_INC_DIR/on_exit.binc"
script-echo -i

declare diff
declare less=1
declare cdok=0
declare noclonly
declare moreopts=1
while [[ "$1" =~ ^- ]] && ((moreopts))
do
    declare original="$1"
    declare option
    option=$(dashstripper "$original")
    shift ## That way you avoid endless loops on invalid options.

    case $option in
        noclonly) noclonly='--noclonly';;
        cdok) cdok=1;;
        diff) diff='--diff';;
        noless) less=0;;
        h|help) script-usage; exit "$OK" ;;
        debug | x ) set -x; trap 'set +x' EXIT;;
        --) moreopts=0;;
        * )
            script-echo -- "$original is an invalid option. See $0 --help";
            exit 1
            ;;
    esac
done

## All of the *-changelog functions work best in the git-root, which is
## where the $GITFUNCS_CHANGELOG_NAME is anyway
declare pwd
pwd=$(pwd)
declare gr
gr=$(git-root)
if [ ! "$pwd" = "$gr" ]
then
    if ((!cdok))
    then
        script-echo "Current directory ($pwd) is not the git root ($gr)"
        declare resp
        resp=$(script-yesno "Go there")
        if [ "$resp" = 'n' ]
        then
            exit "$NOT_OK"
        fi
    fi
    _git-cd-to "$gr" || exit $?
else
    gr=''
fi

declare -a filenames
filenames=("$@")
if ((${#filenames[@]}==0))
then
    mapfile -t filenames < <($DEBUG_GIT_STATUS_PARSE "$(which git-status-parse)" --all) ## matches default git status setting
fi
declare out
out=$(mktemp --suffix=.git-status-with-changelog)
rm_on_exit "$out"
git-process-changelog --withstatus $diff $noclonly "${filenames[@]}" 1>"$out" 2>&1
if ((less==1))
then
    less -RE "$out"
else
    cat "$out"
fi
[ -n "$gr" ] && _git-cd-return
exit $?

:<< __USAGE__
NAME
    git-status-with-changelog

SYNOPSIS
    git-status-with-changelog TBD

DESCRIPTION
    TBD

OPTIONS
    TBD

__USAGE__
