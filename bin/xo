## -*- sh -*-

## Grabs all my processes that have emacs in the command.
## Filters out the grep command
## Filters in where parent ppid is 1 (in case emacs is running a perl debugger
## or some other subprocess)

case $(uname) in
    Linux )
        pscmd="ps lx -U ${USER}"
        grepargs='emacs'
        cutrange='15-20'
        ;;
    Cygwin | cygwin )
        pscmd="ps -l -u ${USER}"
        grepargs='-- emacs-w32'
        cutrange='13-18'
        ;;
    * )
        echo "ps command for $(uname) not defined"
        exit 1
        ;;
esac

## Temp file for processing and diagnostic messages.
procs=$(mktemp)

## Set up a trap for cleanup.
trap finish EXIT SIGINT
finish ()
{
    if [ -e $procs ]
    then
        rm -rf $procs
    fi
}

## Get potential emacs server processes
$pscmd | grep $grepargs | grep -v grep | grep -vi 'emacs -q' >$procs 2>&1

## Count how many
serverup=$(cut -c $cutrange $procs | grep '    1' | wc -l)

if ((serverup==0))
then
    emacs "$@" &
elif ((serverup==1))
then
    if [ ! "$#" = 0 ]
    then
        emacsclient -n -a emacs "$@"
    fi
    ## else just silently go about your business.
else
    echo "More than one potential emacs server process found:"
    cat $procs
fi
