#!/usr/bin/env bash

# xterm_Xground

[ -z "$1" ] && echo "Missing arg: 11 for foreground, 10 for background" && exit 1
[[ "$1" = -h ]] && bash-usage "$0" && exit 0
declare col
col=$1
if [ -n "$XTERM_SHELL" ]
then
    ## from http://superuser.com/questions/157563/programmatic-access-to-current-xterm-background-color
    exec < /dev/tty
    oldstty=$(stty -g)
    stty raw -echo min 0
    #          OSC   Ps  ;Pt ST
    echo -en "\\033]${col};?\\033\\" >/dev/tty  # echo opts differ w/ OSes
    result=
    if IFS=';' read -r -d \\ color ; then
        result=$(echo "$color" | sed 's/^.*\;//;s/[^rgb:0-9a-f/]//g')
        idxresult=$(echo "$result" | sed 's/[:/]//g')
    fi
    stty "$oldstty"
    declare var
    var=xterm_Xground_map_${idxresult}
    declare color
    color=$(eval echo "\$$var")
    if [ -n "${color}" ]
    then
        echo "${color}"
        exit
    else
        echo "## WARNING: - no mapped color found for $result" >&2
    fi
else
    echo "## WARNING: - XTERM_SHELL not defined, probably not an xterm" >&2
fi

if [ -n "$NEWXCOLOR" ]
then
    echo "$NEWXCOLOR"
    exit
else
    echo "## WARNING: - NEWXCOLOR not defined" >&2
fi

echo "## WARNING: - default color is grey" >&2
echo grey
## POD guard
exit 0

## You can add sections with =head1, but stick to =item for section breakdowns,
## not =head2/3/etc/.

:<<'__PODUSAGE__'
=head1 NAME

xterm_Xground - print the foreground or background color

=head1 SYNOPSIS

 xterm_Xground [-h|10|11]

=head1 DESCRIPTION

Print the foreground or background color of the xterm in which the command is executed.

=head1 ARGUMENTS

=over 4

=item 10|11

10 gets the forground. 11 gets the background.

=back

=head1 OPTIONS

=over 4

=item -h

Print this help.

=back

=cut

__PODUSAGE__
