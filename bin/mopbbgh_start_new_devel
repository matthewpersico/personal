# -*- sh -*-

# mopbbgh_start_new_devel

# Creates a new branch for development in local repo created by following the
# convention of forking https://bbgithub.dev.bloomberg.com/$ORG/$REPOSITORY to
# https://bbgithub.dev.bloomberg.com/$USER/$REPOSITORY and then pulling from
# the later to work locally. If you haven't forked and pulled, STOP and run
# glow clone-fork

typeset origin_url=$(git config --get remote.origin.url)
typeset upstream_url=$(git config --get remote.upstream.url)

echo "Repo info"
echo "---------"
echo "Origin:    $origin_url"
echo "  Branches:"
git branch --list
echo
echo "  Upstream:  $upstream_url"
echo

typeset ORG=${upstream_url##*:}; ORG=${ORG%%/*}
typeset REPOSITORY=${upstream_url##*/}

typeset branch_type ## feature or bugfix
typeset branch_id ## Usually the DPKG or DRQS id (with the mnemonic)

ORIGPS3=$PS3
PS3='Select a branch type:'
select branch_type in feature issue QUIT
do
    if [ "$branch_type" = 'QUIT' ]
    then
        exit
    fi
    if [ -n "$branch_type" ]
    then
        break;
    fi
done
PS3=$ORIGPS3

while [ -z "$branch_id" ]
do
    read -p "Branch name:" branch_id
done
resp=$(yesno "Branch $branch_type/$branch_id ok")
if [ "$resp" = 'n' ]
then
    echo "Ok. Try again. Bye."
    exit
fi
typeset branch_name="$branch_type/$branch_id"

typeset gcb=$(git_current_branch)
if [ "$gcb" != 'master' ]
then
    echo "Not on master branch. Should create new branch based off master."
    echo "I'm outta here. You figure it out."
    exit
fi

echo "Syncing master from upstream to local to origin..."
mopbbgh_sync_master_trangle

cmd="git checkout -b $branch_name"
echo "Creating the development branch ($cmd)..."
$cmd

cmd="git push --set-upstream origin $branch_name"
echo "Adding tracker to your fork ${USER}/${REPOSITORY} ($cmd)."
$cmd
