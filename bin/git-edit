#!/usr/bin/env bash

echo "$(date): git-edit" >> "$HOME/.gitaudit"

# git-edit

declare -a files
if [[ $1 =~ ^-+h ]]
then
    bash-usage "$0"
    exit 0
elif [[ $1 =~ -a ]]
then
    readarray -t files < <(git ls-files)
else
    readarray -t files < <(git is mod)
fi
$EDITOR "${files[@]}" &

exit 0

## You can add sections with =head1, but stick to =item for section breakdowns,
## not =head2/3/etc/. If you want just plain text, get rid of pod tags and the
## 'POD' in __PODUSAGE__.

:<<'__PODUSAGE__'
=head1 NAME

git-edit - edit all the modified files, or just all files, in a git repo

=head1 SYNOPSIS

 git-edit [-a]

=head1 DESCRIPTION

Simply runs $EDITOR on $(git is mod) or $(git ls-files) if -a is specified.

=head1 OPTIONS

=over 4

=item -a

Edit all repo objects, not just the modified ones.

=back

=cut

__PODUSAGE__
