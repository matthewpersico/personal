#!/usr/bin/env bash

# <Function Class: util>
# <Function Justification: none>

yesno ()
{
    [[ "$1" =~ -h ]] && func-usage yesno && return 0

    declare print=1
    [[ "$1" =~ -nop ]] && print=0 && shift

    declare prompt_text=$1;shift
    declare choices="y/n"
    declare default=$1;shift
    declare -a cmd
    cmd=("$@")

    declare respyn
    respyn=$(pick "$prompt_text" "$choices" "$default")

	if [ "$respyn" = 'y' ] || [ "$respyn" = 'n' ]
	then
        if (( ${#cmd[@]} == 0 ))
        then
            ## No command, give response
	        ((print)) && echo "$respyn"
            [ "$respyn" = 'n' ] && return 1
	        return 0
        elif [ "$respyn" = 'y' ]
        then
            "${cmd[@]}"
            return $?
        else
            return 1
        fi
	fi
}

return 0 ## usage guard when sourcing

:<<'__PODUSAGE__'
=head1 NAME

yesno - prompt for a yes or no answer

=head1 SYNOPSIS

  yesno [--noprint] "prompt text" "[y|n|]" [command and args to execute if yes]

=head2 Examples using the output

  resp=$(yesno "prompt text" "n")
  if [ "$resp" = 'y' ]
  then
    ## yes actions...
  else
    ## no actions...
  fi

  yesno "prompt text" "n" [command and args to execute if yes])

  [ "$(yesno "prompt text")" = 'y' ] && command and args to execute if yes

=head2 Examples using the status

  if yesno "prompt text" "n"
  then
    ## yes actions...
  else
    ## no actions...
  fi

  yesno "prompt text" "n" [command and args to execute if yes]

  yesno "prompt text" && command and args to execute if yes

=head1 DESCRIPTION

Print the prompt text, print the user's response, which is limited to 'y' or 'n', and use that to make a decision. Accepts 'Y' and 'N'. Does not accept 'yes' or 'no' or 'true', etc.

Prints the result on stdout. Returns 0 if 'y', 1 if 'n'.

=head1 OPTIONS

=item noprint

Do not print the 'y' or 'n' response.

=head1 ARGUMENTS

=over 4

=item "prompt text"

Prints this text, followed the literal text '(y/n) ?', waiting for your response.

=item "[y|n|]"

The default response if you just hit return. If you do not want a default, specify a blank string, i.e: "".

=item command and args to execute if yes

Executes this command with args on a posititve response (y). In this case, prints the output of the command and returns the exit value of the command. On a negative response (n), prints nothing and returns 1.

=back

=cut

__PODUSAGE__
