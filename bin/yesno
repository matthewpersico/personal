#!/usr/bin/env bash

# yesno

[[ "$1" =~ ^(-|--)h ]] && bash-usage "$0" && exit 0

declare do_print
do_print=1
declare choices
choices="y/n"

while [[ "$1" =~ ^- ]]; do
    [[ "$1" =~ -nop ]] && do_print=0 && shift
    [[ "$1" = -q ]] && choices="y/n/q" && shift
done

declare prompt_text
prompt_text=$1;shift
declare default
default=$1;shift

declare respyn
respyn=$(pick "$prompt_text" "$choices" "$default")

## Print response if asked, then exit as requested.
((do_print)) && echo "$respyn"
[ "$respyn" = 'y' ] && exit 0
[ "$respyn" = 'n' ] && exit 1
exit 2

:<<'__PODUSAGE__'
=head1 NAME

yesno - prompt for a yes or no (or quit) answer

=head1 SYNOPSIS

  yesno [-q] [--noprint] "prompt text" [y|n|q]

=head2 Examples using the output

  resp=$(yesno "prompt text" "n")
  if [ "$resp" = 'y' ]; then
      ## yes actions...
  else
      ## no actions...
  fi

  resp=$(yesno -q "prompt text" "n")
  if [ "$resp" = 'y' ]; then
      ## yes actions...
  elif [ "$resp" = 'n' ]; then
      ## no actions...
  else
      ## quit actions...
  fi

  [ "$(yesno "prompt text" "n")" = 'y' ] && command and args to execute if yes

=head2 Examples using the status

  if yesno "prompt text" "n"; then
     ## yes actions...
  else
     ## no actions...
  fi

  if yesno -q "prompt text" "n"; then
     ## yes actions...
  elif (( $? == 1 ))
     ## no actions...
  else
     ## quit actions...
  fi

  yesno "prompt text" "n" && command and args to execute if yes

=head1 DESCRIPTION

Print the prompt text, print the user's response, which is limited to 'y' or
'n', and use that to make a decision. Accepts 'Y' and 'N'. Does not accept
'yes' or 'no' or 'true', etc.

Prints the result on stdout. Returns 0 if 'y', 1 if 'n'.

=head1 ARGUMENTS

=over 4

=item "prompt text"

Prints this text, followed the literal text '(y/n) ?', waiting for your response.

=item [y|n|q]

The default response if you just hit return. If you do not want a default,
specify nothing.

=back

=head1 OPTIONS

=over 4

=item --noprint

Do not print the 'y' or 'n' response.

=item -q

Allow 'q' and 'Q' to be a responses. Returns 2 if 'q'. Does not accept 'quit'

=back

=head1 OBSOLETE

This command used to take, as other arguments, a command with its own arguments
that would be executed on a positive response. We removed that when we had a V8
moment and realized that that functionality could just be implemented at the
caller level with an && operator.

=cut

__PODUSAGE__
