# -*- sh -*-

# auditfuncs

#######################################################################
## Because we want to use this inside of utilfuncs, we must not use any
## functions in utilfuncs here.
#######################################################################

AUDITFUNCS_FILE=${BASH_SOURCE[0]}

auditfuncs_init ()
{
    local bn=$(basename $1)
    local dn=$(dirname $(realpath $1))
    local audit_system=$(echo $bn)
    local audit_system_upper=$(echo $bn | tr '[a-z]' '[A-Z]')
    local audit_system_file="${dn}/../data/${bn}.audit.$(hostname)"

    ## cygwin does not grok "source /dev/stdin <<EOF"
    eval "
${audit_system}_audit ()
{
    [ -n \"\$(set -o | grep xtrace | grep off)\" ] && [ ! \"\$1\" = '-na' ] && echo \$(date +%Y_%m_%d_%H_%M_%S) \$(repl = \${#FUNCNAME[@]}) \${FUNCNAME[1]} \$@ >> $audit_system_file
}
"
    safe_func_export ${audit_system}_audit

    eval "
${audit_system}_script_audit ()
{
    [ -n \"\$(set -o | grep xtrace | grep off)\" ] && [ ! \"\$1\" = '-na' ] && echo \$(date +%Y_%m_%d_%H_%M_%S) \$(repl = \$((SHLVL-MASTER_SHLVL))) \${BASH_SOURCE[*]} \$@ >> $audit_system_file
}
"
    safe_func_export ${audit_system}_script_audit
}
auditfuncs_init $AUDITFUNCS_FILE

auditfuncs_edit ()
{
    auditfuncs_audit
    xo $AUDITFUNCS_FILE
}

## I used to define functions with '_' and aliases with '-' because the emacs
## modes that parse for functions to generate jump lists didn't see functions
## with '-' in their name. But since I've fixed that issue, I should go back
## and rename all these.
alias auditfuncs-edit=auditfuncs_edit

auditfuncs_reload ()
{
    auditfuncs_audit
    . $AUDITFUNCS_FILE
}
alias auditfuncs-reload=auditfuncs_reload
