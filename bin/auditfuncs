# -*- sh -*-

# auditfuncs

#######################################################################
## Because we want to use this inside of utilfuncs, we must not use any
## functions here that are defined in utilfuncs, such as 'repl'.
#######################################################################

auditfuncs-init ()
{
    local funcfile=${BASH_SOURCE[1]}
    [ -n "$1" ] && funcfile=$1 ## to accomodate nests
    local bn=$(basename $funcfile)
    local dn=$(dirname $(realpath $funcfile))
    local audit_system=$(echo $bn)
    local audit_system_upper=$(echo $bn | tr [:lower:] [:upper:] | tr [.] [_])
    local audit_system_file="${dn}/../data/${bn}.audit.$(hostname)"

    ## cygwin does not grok "source /dev/stdin <<EOF"
    eval "
${audit_system}_audit ()
{
    [ -n \"\$(set -o | grep xtrace | grep off)\" ] && [ ! \"\$1\" = '-na' ] && echo \$(date +%Y_%m_%d_%H_%M_%S) \$(repl = \${#FUNCNAME[@]}) \${FUNCNAME[1]} \$@ >> $audit_system_file
}
"
    safe_func_export ${audit_system}_audit

    eval "
${audit_system}_script_audit ()
{
    [ -n \"\$(set -o | grep xtrace | grep off)\" ] && [ ! \"\$1\" = '-na' ] && echo \$(date +%Y_%m_%d_%H_%M_%S) \$(repl = \$((SHLVL-MASTER_SHLVL))) \${BASH_SOURCE[*]} \$@ >> $audit_system_file
}
"
    safe_func_export ${audit_system}_script_audit

    local funcfilebase=$(basename $funcfile | tr [:lower:] [:upper:] | tr [.] [_])
    eval ${funcfilebase}_FILE=${funcfile}

    ! $CRON && [ -n "$ALLFUNCS_PROFILE" ] && \
        ( [ -n "$ALLFUNCS_PROFILE_LEVELS" ] && \
              printf '=%.0s' $(eval "echo {1.."$((${#BASH_SOURCE[@]}))"}") || true ) && \
        echo "$(date): $funcfile is running..."

}
auditfuncs-init
. ${HOME}/personal/bin/controlfuncs_build ## This is called before PATH is
                                          ## updated

auditfuncs-end ()
{
    local funcfile=${BASH_SOURCE[1]}
    [ -n "$1" ] && funcfile=$1 ## to accomodate nests
    local funcfilebase=$(basename $funcfile | tr [:lower:] [:upper:] | tr [.] [_])
    eval ${funcfilebase}_FILE=${funcfile}
    ! $CRON && [ -n "$ALLFUNCS_PROFILE" ] && \
        ( [ -n "$ALLFUNCS_PROFILE_LEVELS" ] && \
              printf '=%.0s' $(eval "echo {1.."$((${#BASH_SOURCE[@]}))"}") || true ) && \
        echo "$(date): $funcfile has run." && echo

}

auditfuncs-end
