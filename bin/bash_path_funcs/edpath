###############################################################################
#
# Name:        edpath
#
# Author:      Stephen Collyer (scollyer@netspinner.co.uk)
#
# Copyright:   Netspinner Ltd 2000-2003
#
###############################################################################

edpath ()
{
    ###########################################################################
    # local variables
    ###########################################################################

    typeset options_shift_val options_missing_arg options_unknown_opt
    typeset options_num_args_left
    typeset opt_h opt_p opt_s
    typeset opt_x opt_v
    typeset sep=:

    typeset pathvar VAR TEMP

    usage_init
    typeset -a USAGE
    i=0; USAGE[i]="edpath [-h] [-s separator] [-x] [-v] [[-p] pathvar]"
    ((i+=1)); USAGE[i]="Uses \$EDITOR (default: vi) to edit 'pathvar'."
    ((i+=1)); USAGE[i]="$USAGE_OPT_P1"
    ((i+=1)); USAGE[i]="$USAGE_OPT_P2"
    ((i+=1)); USAGE[i]="$USAGE_OPT_P3"
    ((i+=1)); USAGE[i]="$USAGE_OPT_P4O"
    ((i+=1)); USAGE[i]="$USAGE_OPT_P5"
    ((i+=1)); USAGE[i]="$USAGE_OPT_S"
    ((i+=1)); USAGE[i]="$USAGE_OPT_X"
    ((i+=1)); USAGE[i]="$USAGE_OPT_V"
    ((i+=1)); USAGE[i]="$USAGE_OPT_H"

    ###########################################################################
    # handle options
    ###########################################################################

    options "hp:s:xv" "$@"
    shift $options_shift_val

    if [ -n "$opt_h" ]
    then
        Usage "${USAGE[@]}"
        return
    fi
    if [ -n "$options_missing_arg" ]
    then
        Usage "$USAGE" "Missing argument for -$options_missing_arg"
        return
    fi
    if [ -n "$options_unknown_option" ]
    then
        Usage "$USAGE" "Unknown option -$options_unknown_option"
        return
    fi
    if [ $options_num_args_left -eq 1 ]
    then
        pathvar=$1
    fi

    [ -n "$opt_p" ] && pathvar=$opt_p # use specified pathvar
    [ -z "$pathvar" ] && pathvar=PATH  # default

    [ -n "$opt_s" ] && sep=$opt_s;

    ###########################################################################
    # main
    ###########################################################################

    TEMP=/tmp/edpath.out.$$

    VAR=\$$pathvar                        # VAR="$LIBPATH" for example
    eval export OLD$pathvar=$VAR          # store old path in e.g OLDPATH

    listpath -s "${sep}" -p $pathvar > $TEMP  # write path elements to file
    ${EDITOR:-vi} $TEMP                   # edit the file
    eval $pathvar=$(makepath -s "${sep}" < $TEMP)
                                          # reconstruct path

    /bin/rm -f $TEMP                      # remove temporary file
    [ -n "$opt_v" ] && listpath -s "${sep}" -p $pathvar
    [ -n "$opt_x" ] && export $pathvar
}
safe_func_export --this

# emacs
# Local Variables:
# mode: sh
# End:
