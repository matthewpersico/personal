###############################################################################
#
# Name:         searchpath
#
# Description:
#
# search path for matching elements
#
# Usage: searchpath [-h] [-p <pathvar>] string
#
# e.g. searchpath -p LIBPATH $HOME
#      /home/persicom/lib
#
# Author:      Matthew Persico (matthew.persico@gmail.com)
#
# Copyright:   Matthew Persico (matthew.persico@gmail.com)
#
# Derived from work by Stephen Collyer (scollyer@netspinner.co.uk),
#                      Copyright: Netspinner Ltd 2000-2003
#
###############################################################################

searchpath()
{
    ###########################################################################
    # local variables
    ###########################################################################

    typeset options_shift_val options_missing_arg options_unknown_opt
    typeset options_num_args_left
    typeset opt_h opt_p opt_n

    typeset pathvar
    typeset USAGE="searchpath [-p <pathvar>] [-n] string"
    typeset USAGE1="search path elements for matching string"
    typeset USAGE2="-p <pathvar> - The envvar to search. Default is"
    typeset USAGE3="               PATH, if option is not specified."
    typeset USAGE4="-n - Add index numbers to the results."


    ###########################################################################
    # handle options
    ###########################################################################

    options hp:n "$@"
    shift $options_shift_val

    if [ -n "$opt_h" ]
    then
        Usage "$USAGE" "$USAGE1" "$USAGE2"
        return
    fi
    if [ -n "$options_missing_arg" ]
    then
        Usage "$USAGE" "Missing argument for -$options_missing_arg"
        return
    fi
    if [ -n "$options_unknown_option" ]
    then
        Usage "$USAGE" "Unknown option -$options_unknown_option"
        return
    fi
    if [ $options_num_args_left -ne 1 ]
    then
        Usage "$USAGE" "Missing search string"
        return
    fi

    pathvar=PATH                        # default
    [ -n "$opt_p" ] && pathvar=$opt_p # use specified pathvar

    if [ -n "$opt_n" ]
    then
        opt_n='-n'
    fi
    ###########################################################################
    # main
    ###########################################################################

    eval echo \$$pathvar | colon2line | grep $opt_n $1
}

if [ "$1" = 'export' ]
then
    export -f searchpath
fi
# emacs
# Local Variables:
# mode: sh
# End:
