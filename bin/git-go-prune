# -*- sh -*-
# shellcheck shell=bash

# git-go-prune

cmd-echo --id git-go-prune "Processing clean, non-open-pr repos"

declare -A skip
declare -A never_prune
declare np
for np in $(listpath GIT_IMPORTANT_REPO_LIST); do
    never_prune[$np]=1
done

# | reverse is so that we do worktrees before their parent directories
declare _ggp_i
for _ggp_i in $(git go --listfull | reverse ); do
    if [[ -n ${never_prune[$_ggp_i]} ]]; then
        cmd-echo --id git-go-prune --head --wc "Skipping $_ggp_i, important repo"
        continue
    if [[ -n ${skip[$_ggp_i]} ]]; then
        cmd-echo --id git-go-prune --head --wc "Skipping $_ggp_i, worktrees still exist"
        continue
    fi
    (
        if cd "$_ggp_i"; then
            if git repo is pristine -v \
                    && ! git repo pr --get \
                    && cmd-echo --id git-go-prune --head "$(pwd)"; then
                if cmd-yesno "Delete" "n"; then
                    git wt del --current
                else
                    # If this is a worktree, we cannot delete the parent
                    # dir it lives in, so mark in order to skip it later.
                    # shellcheck disable=SC2155 #https://github.com/koalaman/shellcheck/wiki/SC2155
                    declare isawto=$(git repo is a worktree of)
                    if [[ -n $isawto ]]; then
                        skip[$isawto]=1
                    fi
                fi
            fi
        fi
    )
    fi
done
