#!/opt/bb/bin/bash

today=$(date +%a)
if [ "$today" = 'Sat' ] || [ "$today" = 'Sun' ]
then
    exit 0
fi

alllog=$(mktemp)
difflog=$(mktemp)
export GITSROOT=/tmp/BuildDebRepos
branch="cron-BuildDeb-sync-$(date +%Y-%m-%d)"
(
    . ${HOME}/.bash_profile

    [ -d $GITSROOT ] && \rm -rf $GITSROOT
    mkdir $GITSROOT
    cd $GITSROOT

    git clone bbgithub:dpkg/builddeb
    builtin cd builddeb
    echo "Retimestamping; be patient..."
    git-retimestamp
    builtin cd -

    glow clone-fork bbgithub:dpkg/blp-dpkg-portal
    builtin cd blp-dpkg-portal
    git checkout -b $branch
    echo "Retimestamping; be patient..."
    git-retimestamp
    builtin cd -

    diff -r builddeb/lib/perl/BuildDeb blp-dpkg-portal/lib/BuildDeb > $difflog 2>&1
    status=$?

    if ((status))
    then
        cmds=$(mktemp)
        touch $cmds

        perl -MFile::stat -ane 'm/diff -r/ && do {
    $F[2] =~ s/(builddeb|blp-dpkg-portal)/$ENV{GITSROOT}\/$1/;
    $F[3] =~ s/(builddeb|blp-dpkg-portal)/$ENV{GITSROOT}\/$1/;
    chomp $F[3];
    ## Make sure we copy newer over older
    ($F[3], $F[2]) = ($F[2], $F[3])
        if (stat($F[3])->mtime > stat($F[2])->mtime);
    print q(##), join ( q(##), qx(ls -lat $F[2] $F[3]));
    print "cp -rv $F[2] $F[3]\n"}' $difflog > ${cmds}.temp

        cpcmds=$(smartwc -l ${cmds}.temp)
        if ((cpcmds))
        then
            echo "echo Fix up for GITSROOT" >> $cmds
            echo "echo We fix the timestamps on the repos," >> $cmds
            echo "echo so that we can copy the newer file" >> $cmds
            echo "echo over the older one, no matter which" >> $cmds
            echo "echo repo you make the change in." >> $cmds
            cat ${cmds}.temp >> $cmds
        fi

        perl -ane 'm/Only in blp/ && do {
    chomp;
    s/Only in blp-dpkg-portal\//cd $ENV{GITSROOT}\/blp-dpkg-portal; git rm /;
    s/: /\//;
    print qq{($_);\n}}' $difflog > ${cmds}.temp

        cpcmds=$(smartwc -l ${cmds}.temp)
        if ((cpcmds))
        then
            echo "echo Fix up for removals." >> $cmds
            echo "echo Assuming files are removed from builddeb." >> $cmds
            echo "echo If not the case then all bets are off!" >> $cmds
            cat ${cmds}.temp >> $cmds
        fi

        perl -ne 'm/Only in builddeb/ && do {
    chomp;
    m/Only in (.*)/;
    $src=$1; $src =~ s/: /\//;
    $mod=$src; $mod =~ s/.*BuildDeb/BuildDeb/;
    print qq{(cp -v $ENV{GITSROOT}/$src $ENV{GITSROOT}/blp-dpkg-portal/lib/$mod);\n}}' $difflog > ${cmds}.temp
        cpcmds=$(smartwc -l ${cmds}.temp)
        if ((cpcmds))
        then
            echo "echo Fixup for additions."  >> $cmds
            echo "echo Assuming files are added to builddeb." >> $cmds
            echo "echo If not the case then all bets are off!" >> $cmds
            cat ${cmds}.temp >> $cmds
        fi

        allcmds=$(smartwc -l ${cmds})
        if ((allcmds))
        then
            builtin cd blp-dpkg-portal
            cat <<EOF >>$cmds
echo
echo Do these by hand:
echo    cd $GITSROOT/blp-dpkg-portal
echo    git push --set-upstream origin $branch
echo    cd lib
echo    git add .
echo    git commit -m "'builddeb to blp-dpkg-portal sync'"
echo    git push
echo
echo Now go to $(git remote -v | grep push | grep origin | perl -ane 'print $F[1]')
echo and submit a PR against $(git remote -v | grep push | grep upstream | perl -ane 'print $F[1]')
EOF
            builtin cd -
            chmod +x $cmds
            $cmds
            exit 1
        fi
    else
        exit 0
    fi

) > $alllog 2>&1
status=$?
if ((status))
then
    mailx -s "BuildDeb inconsistent between builddeb and blp-dpkg-portal" \
          mpersico5@bloomberg.net \
          <<EOM
$(cat $alllog)
EOM
elif [ "$today" = 'Mon' ]
then
    mailx -s "BuildDeb consistent between builddeb and blp-dpkg-portal (Monday check)" \
          mpersico5@bloomberg.net
fi
exit
