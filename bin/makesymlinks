#!/usr/bin/env bash

# makesymlinks

# creates symlinks from any target file to the git-controlled source in
# ~/personal/dotfiles. Use this when initing a new vm.

declare opwd
opwd=$(pwd)

# create DOTFILES_OLDDIR
if [ ! -d "$DOTFILES_OLDDIR" ]
then
    echo -n "Creating $DOTFILES_OLDDIR for backup of any existing dotfiles in ~..."
    mkdir -p "$DOTFILES_OLDDIR"
    echo "done"
fi

# shellcheck disable=SC1090
. "$DOTFILES_MANIFEST"

# change to the dotfiles directory
echo -n "Changing to the $DOTFILES_DIR directory ..."
builtin cd "$DOTFILES_DIR" || exit 1
echo "done"

# Move any existing dotfiles in to dotfiles_old directory, then create
# symlinks from the original location to the corresponding files in the
# ~/dotfiles directory.
# shellcheck disable=SC2154 #dotfiles assigned in DOTFILES_MANIFEST source above
for src in "${!dotfiles[@]}"
do
    declare fullsrc
    fullsrc=$DOTFILES_DIR/$src
    declare fulllink
    fulllink=${dotfiles[$src]}
    makesymlink --backup "$DOTFILES_OLDDIR" --verbose --relative "$fullsrc" "$fulllink"
done
builtin cd "$opwd" || exit 1
## POD guard
exit 0

## You can add sections with =head1, but stick to =item for section breakdowns,
## not =head2/3/etc/.

:<<'__PODUSAGE__'
=head1 NAME

makesymlinks - script that does something

=head1 SYNOPSIS

 makesymlinks [--option1] [ --option2 optionarg ] arg1 [arg2 ...] 
     [fee] [dfsdfs] [sfsdfsf]

=head1 DESCRIPTION

Describe in general terms what makesymlinks does.

=head1 ARGUMENTS

=over 4

=item arg

Describe what arg does, should be, etc. Add a new =item for each distinct arg.

=back

=head1 OPTIONS

=over 4

=item --option1

Describe what --option1 does.

=item --option2

Describe what --option2 does. Describe what optionarg does.

=over 2

=item *

A choice for optionarg

=item *

Another choice for optionarg

=back

=back

=cut

__PODUSAGE__

