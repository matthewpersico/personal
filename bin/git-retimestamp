#!/usr/bin/env bash

# git-retimestamp

# shellcheck disable=SC1090
use on_exit

declare verbose=0
if [[ "$1" =~ -v ]]; then
    verbose=1
fi

## Get the list of files.
declare -A gitfiles
declare i
for i in $(git ls-files); do
    gitfiles[$i]=1
done

## Remove from the list any that are currently modified.
declare msgd=''
for i in $(git what is mod); do
    if [[ -z "$msgd" ]]; then
        msgd=1
        if ((verbose==0)); then
            echo Will not consider modified files
        else
            echo Will not consider the following modified files:
        fi
    fi
    ((verbose)) && echo "$i"
    unset "gitfiles[$i]"
    [[ -n "${gitfiles[$i]}" ]] && echo "WOAH DIDNT DELETE gitfiles[$i] - '${gitfiles[$i]}'"
done

## Parse the log to get the date for each file and modify accordingly.
declare gitdate
git log  --date=iso --name-only | \
    while read -r i; do
        if [[ $i =~ Date: ]]; then
            # hold onto this date
            # shellcheck disable=SC2001 #https://github.com/koalaman/shellcheck/wiki/SC2001
            gitdate=$(echo "$i" | sed -e 's/Date:\s\+//')
        elif [[ -n "${gitfiles[$i]}" ]]; then
            unset "gitfiles[$i]"
            [[ -n "${gitfiles[$i]}" ]] && echo "WOAH DIDNT DELETE gitfiles[$i] - '${gitfiles[$i]}'"
            declare filedate
            filedate=$(stat -c %y "$i" | sed 's/\.[0-9]\+//')
            if [[ ! "$filedate" = "$gitdate" ]]; then
                if ((verbose)); then
                    echo
                    echo "${i}..."
                    ls -la "$i"
                fi
                touch -h -d "$gitdate" "$i"
                if ((verbose)); then
                    ls -la "$i"
                fi
            fi
        fi
    done
