# -*- sh -*-
# shellcheck shell=bash

# You will notice that we do not use a shebang. This is so that under
# cron-wrapper, we use the user's complete login environment, obtained by
# having cron-wrapper source the user's profile (which should also source their
# .bashrc). Without a shebang in the called script, the called script inherits
# the entire environmetn, including functions. Putting in a shebang line seems
# to clear the functions. Why? :palms-up:

ev=0
if [[ "$1" != 'silent' ]]; then

    echo
    echo "vvvvvvvvv We are in $0 vvvvvvvvv"

    echo
    echo "Time is $(date)"

    echo
    echo args are "$@"

    echo
    echo shebang line is
    head -1 "$0"

    echo
    echo shell is "$SHELL"

    echo
    if [[ $1 = 'exit1' ]]; then
        shift
        echo will exit 1
    ev=1
    else
        echo will exit 0
    fi

    echo
    echo CRON is "$CRON"

    echo
    echo Environment variables are
    env | sort | grep -E '^[A-Za-z_]+='

    echo
    echo Loaded functions are
    env | sort | grep -E '^BASH'

    echo
    echo PATH is
    listpath

    echo
    echo "^^^^^^^^^ End of $0 ^^^^^^^^^"
fi

exit $ev
