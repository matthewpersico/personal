#!/usr/bin/env bash

declare moreopts=1
declare todoDir

for i in ~/nfs/public_html/TODO  ~/public_html/TODO ~/todo
do
    [ -d "$i" ] && todoDir=$i && break
done

[ -z "$todoDir" ] && echo Cannot find TODO dir && exit 1

declare todoMDFile="$todoDir/todo.md"
declare todoHTMLFile="$todoDir/todo.html"

todo_gen ()
{
    cd "$todoDir" || exit 1
    title="TODO as of $(date)"
    echo '<title>TODO</title>' > "$todoHTMLFile".tmp
    python3.6 -m markdown "$todoMDFile" >> "$todoHTMLFile".tmp
    sed "/>TODO</s//>$title</" "$todoHTMLFile".tmp > "$todoHTMLFile"
    rm -f "$todoHTMLFile".tmp
    cmd-echo Generated
    ls -lart "$todoHTMLFile"
    todo_view
}

todo_edit ()
{
    if [ "$1" = 'client' ]
    then
        emacsclient -c "$todoMDFile"
    else
        xo "$todoMDFile"
    fi
}

todo_view ()
{
    if [ -n "$BROWSER" ]
    then
        "$BROWSER" "$todoHTMLFile"
    else
        cmd-echo -e -- "No BROWSER defined"
    fi
}

while [[ "$1" =~ ^- ]] && ((moreopts))
do
    declare original="$1"
    shift
    declare option
    option=$(dashstripper "$original")
    ## This bit deals with --foo=bar instead of --foo bar
    ## declare okey=''
    ## declare ovalue=''
    ## if [[ "$option" =~ = ]]
    ## then
    ##    okey=${option%%=*}
    ##    ovalue=${option#*=}
    ##    option="$okey"
    ## fi

    case $option in
        edit )
            todo_edit
            exit 0
            ;;
        gen* )
            todo_gen
            exit 0
            ;;
        view )
            todo_view
            exit 0
            ;;
        help )
            script-usage "$0"
            exit 0
            ;;
        --)
            moreopts=0
            ;;
        * )
            cmd-echo -- "$original is an invalid option. See $0 --help"
            exit 1
            ;;
    esac
done

cmd-echo "No options specified"
if [ "$todoHTMLFile" -ot "$todoMDFile" ]
then
    cmd-echo "md file newer - generating"
    todo_gen
else
    cmd-echo "editing..."
    todo_edit client
    todo_gen
fi
todo_view

## The End, to make sure we never eval the usage statement
exit 0

## Go grab the usage template the file USAGE
## You can add sections with =head1, but stick to =item for section breakdowns,
## not =head2/3/etc/. If you want just plain text, get rid of pod tags and the
## 'POD' in __PODUSAGE__.

:<<'__PODUSAGE__'
=head1 NAME

todo - todo html thingy

=head1 SYNOPSIS

 todo --edit
 todo --generate

=cut

__PODUSAGE__
