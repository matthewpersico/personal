# -*- sh -*-

# yumaptfuncs
## I chose to use 'local' because it is more semantically correct for what we
## are doing than 'declare' is, and 'typeset' is deprecated except for ksh
## compatibility.

YUMAPTFUNCS_FILE=${BASH_SOURCE[0]}

yumaptfuncs-edit ()
{
    xo $YUMAPTFUNCS_FILE
}
safe_func_export yumaptfuncs-edit

aptfuncs-edit ()
{
    yumaptfuncs-edit "$@"
}
safe_func_export aptfuncs-edit

yumfuncs-edit ()
{
    yumaptfuncs_edit "$@"
}
safe_func_export yumfuncs-edit

yumaptfuncs-reload ()
{
    . $YUMAPTFUNCS_FILE
}
safe_func_export yumaptfuncs-reload

aptfuncs-reload ()
{
    yumaptfuncs_reload "$@"
}
safe_func_export aptfuncs-reload

yumfuncs-reload ()
{
    yumaptfuncs_reload "$@"
}
safe_func_export yumfuncs-reload

apt-update ()
{
    sudo apt-get update "$@"
}
safe_func_export apt-update

apt-upgrade ()
{
    sudo apt-get upgrade "$@"
}
safe_func_export apt-upgrade

apt-install ()
{
    sudo apt-get install "$@"
}
safe_func_export apt-install

apt-remove ()
{
    sudo apt-get remove "$@"
}
safe_func_export apt-remove

yum-update ()
{
    sudo yum update "$@"
}
safe_func_export yum-update

yum-list ()
{
    sudo yum list "$@"
}
safe_func_export yum-list

yum-install ()
{
    sudo yum install "$@"
}
safe_func_export yum-install

yum-erase ()
{
    sudo yum erase "$@"
}
safe_func_export yum-erase

yum-uninstall ()
{
    yum-erase "$@"
}
safe_func_export yum-uninstall

yum-group-list ()
{
    sudo yum group list "$@"
}
safe_func_export yum-group-list

yum-group-install ()
{
    sudo yum group install "$@"
}
safe_func_export yum-group-install
