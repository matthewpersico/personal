#!/usr/bin/env bash

# git-config

echo "$(date): git-grep" >> "$HOME/.gitaudit"

# git-grep

# shellcheck disable=SC1090
source "$BASH_INC_DIR/on_exit.binc"

if ! git-version-verify 'git-config'
then
    exit 1
fi

usage ()
{
    (
        [ -n "$*" ] && cmd-echo -- "$@"
        echo "** Extended actions **"
        bash-usage "$0"
        echo
        echo "** Standard actions **"
        "$REALGIT" config --help
    ) 2>&1 | ${PAGER:-less}
}

main ()
{
    declare -a pass_on_args

    ## Must be REALGIT or we recurse like mad and forkbomb ourselvesq...
    for i in $($REALGIT config --get git-config.opts)
    do
        pass_on_args+=("$i")
    done

    while [ -n "$1" ]
    do
        declare original="$1"
        shift
        if [[ "$original" =~ ^- ]]
        then
            declare option
            option=$(dashstripper "$original")

            ## All of the --foo=bar processing is stripped away because we
            ## don't need it for the limited set of options we are processing.

            case $option in
                h | help )
                    usage ''
                    exit 0
                    ;;
                personal )
                    pass_on_args+=('-f' "$HOME/.gitconfig.personal")
                    continue
                    ;;
                bloom* )
                    pass_on_args+=('-f' "$HOME/.gitconfig.bloomberg")
                    continue
                    ;;
                ## No '*)' case needed; anything else just gets passed on
            esac
        fi

        ## If we are here, pass it on
        pass_on_args+=("$original")
    done

    $REALGIT config "${pass_on_args[@]}"
    return $?
}

main "$@"

exit $?

:<<'__PODUSAGE__'
=head1 NAME

git-config - git extention of git config

=head1 SYNOPSIS

 git config [--personal|--bloomberg] <all other git config options>

=head1 DESCRIPTION

Extensions to the 'git config' command. Any action not described here will be passed onto the actual 'git grep' command.

=head1 EXTENSIONS

=over 4

=item --personal

Shortcut for -f "$HOME/.gitconfig.personal". Only needed for writing. "$HOME/.gitconfig.personal" is [include]ed in .gitconfig, so that it will be searched for read operations.

=item --bloomberg

Shortcut for -f "$HOME/.gitconfig.bloomberg". Only needed for writing. "$HOME/.gitconfig.bloomberg" is [include]ed in .gitconfig, so that it will be searched for read operations.

=back

=cut

__PODUSAGE__
