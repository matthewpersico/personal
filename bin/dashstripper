# -*- sh -*-
# shellcheck shell=bash

# dashstripper

## Strip all leading dashes from $1 so that -foo and --foo can both be
## processed as 'foo'. Leaves '--' intact.

[[ -z $1 ]] && bash-usage "$0" && exit 0

declare stripit='-'
declare option
if (( $# == 2)); then
    stripit="$1"
    shift
fi
option="$1"
declare prior
prior=''
while [[ ! "$prior" = "$option" ]] && [[ ! "$option" = '--' ]]; do
    prior=$option
    option=${option##"$stripit"}
done
echo "$option"
exit 0

## You can add sections with =head1, but stick to =item for section breakdowns,
## not =head2/3/etc/.

:<<'__PODUSAGE__'
=head1 NAME

dashstripper - strips lead dashes from option specs

=head1 SYNOPSIS

 dashstripper [char-to-strip] an_option_string
 dashstripper # shows help

=head1 DESCRIPTION

Takes -foo and --bar, returning "foo" and "bar", respecively. Used by shell
scripts that are processing their own options instead of using some form of
"getopt".

=head1 ARGUMENTS

=over 4

=item an_option_string

The string representing the option, with its dashes.

=back

=head1 OPTIONS

=over 4

=item char-to-strip

When not specified, we strip all leading "-". Some options can be specified
with a "+", so we allow for stripping those too, if you tell us.

=cut

__PODUSAGE__
