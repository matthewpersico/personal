#!/usr/bin/env bash

# ghe-to-gh

# Put changes to ghe on gh
if [[ $1 =~ ^-+h ]] \
   || [[ -z $1 ]]; then
    cat <<'EOU'
usage: ghe-to-gh <branch>

Take commits on a GitHub Enterprise branch and propigate them to a GitHub.com branch.

- <branch>

  The branch name is used to reference two branches:

  * gh-<branch>, a local branch tracking the remote 'gh/<branch>'.
    'gh' is assumed to be set up as a remote reference to the
    GitHub.com repository.

  * <branch>, a local branch tracking the remote 'origin/<branch>'.
    'origin' is assumed to be set up as a remote reference to the
    GitHub Enterprise repository.

  The commits on '<branch>' are rebased onto the head of 'gh-<branch>'.

After testing you can then propigate to all changes on 'gh-<branch>' to the other
branches in the GitHub.com repo with the command:

  git branch --sync <branch> origin

which must be run in a clone of the GitHub.com repo.

EOU
    exit 0
fi

git-branch --sync "$1" "gh/$1"
