# -*- sh -*-
# shellcheck shell=bash

# monkeypatch

# Turn off monkeypatching or turn it on with minimal functionality
declare -A mps
mps=(["${HOME}/bash_profile.monkeypatch"]=VERBOSE_PROFILE
     ["${HOME}/bash_profile.employer.monkeypatch"]=VERBOSE_PROFILE
     ["${HOME}/bashrc.monkeypatch"]=VERBOSE_RC
     ["${HOME}/bashrc.employer.monkeypatch"]=VERBOSE_RC
    )

declare -A envvarseen
_envvar_check ()
{
    if [[ -z ${envvarseen[$1]} ]]; then
        if [[ ${!1} = true ]]; then
            echo "${1} is set; unset ${1} yourself."
            unset "$1"
        else
            echo "envvar ${1} is not set"
        fi
        envvarseen[$1]='seen'
    fi
}

main()
{
    declare action=$1;shift;
    declare mp
    for mp in "${!mps[@]}"; do
        if [[ $action == 'whack' ]]; then
            rm -rfv "$mp"
            _envvar_check "${mps[$mp]}"
        elif [[ $action == 'off' ]]; then
            if [[ -f $mp ]]; then
                echo "chmod a-x $mp"
                chmod a-x "$mp"
            else
                echo "No file $mp to chmod a-x"
            fi
            _envvar_check "${mps[$mp]}"
        elif [[ $action == 'on' ]]; then
            if [[ ! -f $mp ]]; then
                echo "Creating $mp"
                if (($#)); then
                    echo "$*" > "$mp"
                else
                    # shellcheck disable=SC2016 #https://github.com/koalaman/shellcheck/wiki/SC2016
                    # Using single, non-expanding quotes on purpose
                    echo 'if ! $CRON; then export' " ${mps[$mp]}=true; fi" > "$mp"
                fi
            else
                echo "$mp already exists"
            fi
            echo "chmod a+x $mp"
            chmod a+x "$mp"
        else
            echo "on, off, whack: pick one..."
            false; return
        fi
    done
    true; return
}

main "$@"
exit
