#!/usr/bin/env bash

##echo "****** GIT WRAPPER ENTERED!!!!!******" >&2
# git

# A wrapper around 'git' to extend it.

# If you want to add the command 'foobar' to 'git', you can simply create the
# file 'git-foobar', put it on your PATH, and invoke it as 'git foobar'.

# However, if you want to add to an EXISTING command, this doesn't work;
# git-worktree on your PATH will not be called instead of 'git worktree'.

# Soooooo, we have this wrapper that will see if a script exists on the path
# for the given command, and if so, call that command. Otherwise, pass the
# command off to git.

# Note that your script git-foo that extends an existing command 'git foo' must
# be able to determine when to handle the extended request itself and when to
# hand off to the existing command.

# The variable REALGIT is defined in git.env
if [ -z "$REALGIT" ]
then
    echo "ERROR: git wrapper $0 can't find system git because envvar REALGIT is not defined. Bailing..."
    exit 1
fi

declare command=$1; shift
declare extend_script="git-${command}"
if which "$extend_script" 1>/dev/null 2>/dev/null
then
    [ -n "$GIT_DISPATCHER_VERBOSE" ] && echo GIT WRAPPER calling "$extend_script" "$@" >&2
    "$extend_script" "$@"
else
    [ -n "$GIT_DISPATCHER_VERBOSE" ] && echo GIT WRAPPER calling "${REALGIT}" "${command}" "$@" >&2
    "${REALGIT}" "${command}" "$@"
fi
exit $?
