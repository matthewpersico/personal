# -*- sh -*-
# shellcheck shell=bash

# git-web

use mktemp
use on_exit

declare -a git_web__browse_args
declare more_our_opts=1
while [[ "$1" =~ ^- ]] && ((more_our_opts)); do
    declare original="$1"
    declare option
    option=$(dashstripper "$original")
    shift ## That way you avoid endless loops on invalid options.
    ## This bit deals with --foo=bar instead of --foo bar
    declare okey
    declare ovalue=''
    ## but only deal with it if we really have an option. Otherwise you
    ## misinterpret items like this git clone option: --config
    ## "remote.origin.fetch=+refs/pull/*/head:refs/remotes/origin/pr/*'
    if [[ $option =~ ^- ]]; then
        if [[ "$option" =~ = ]]; then
            okey=${option%%=*}
            # shellcheck disable=SC2034 # We'll use it eventually
            ovalue=${option#*=}
            option="$okey"
        fi
    fi

    case $option in
        ##
        ## Our options
        ##
        set-browser )
            [[ -z "$ovalue" ]] && ovalue=$1 && shift
            declare tool
            tool=$(basename "$ovalue" .exe)
            git config --file "$HOME/.gitconfig.variable" web.browser "$tool"
            git config --file "$HOME/.gitconfig.variable" "browser.${tool}.path" "$ovalue"
            exit 0
            ;;

        h | help )
            git-usage --real web--browse "$0"
            exit 0
            ;;
        ##
        ## Options to pass onto real git web--browse
        ##
        * )
            git_web__browse_args+=("$original")
            ;;
    esac
done

if (($#)); then
    git_web__browse_args+=("$@")
else
    declare remote
    remote=$(git-get-default-remote)
    declare githost
    declare repo
    declare noop
    read -r githost noop noop repo < <(git utils decode-url "$remote")

    declare url
    url="$(git kv --get "browser-urls.$githost")/$repo"
    git_web__browse_args+=("$url")
fi

$REALGIT web--browse "${git_web__browse_args[@]}" &

exit 0
echo "$noop" > /dev/null # in lieu of shellcheck 2034

:<<'__PODUSAGE__'
=head1 NAME

git-web - Wrapper for 'git web--browse'

=head1 SYNOPSIS

 git-web ...

=head1 DESCRIPTION

Run git the web--browser command, with extentions.

=head1 ARGUMENTS

The git web--browser function requires a target of some sort to look at as its arguments. We have extended it so that if there are no arguments, the current directory's repo's origin site at the remote git server is the target.

=head1 OPTIONS

=over 4

=item --set-browser /path/to/browser

Sets the appropriate variables in the .git configuration files to identify the browser to use.

=back

=cut

__PODUSAGE__
