#!/usr/bin/env bash

declare o_width=1056
declare o_height=500
declare no_exec=0

# Define the options. ':' suffix for a mandatory value to an option, '::' for
# an optional one. Note that the long and short don't have to match up.
declare OPTSARGS
declare shortopts='w:h:na'
declare longopts='width:,height:,noexec'

# Parse args.
OPTSARGS=$(getopt -a -o "$shortopts" -l "$longopts" -n "$(basename "$0")" -- "$@")
declare status=$?
((status != 0)) && exit $status

# Reset the command line ($@).
eval set -- "$OPTSARGS"

# Reprocess the command line, extracting options and their arguments into
# variables.
while true && [[ $1 =~ ^- ]]
do
    declare option=$1
    shift
    [ "$option" != '--' ] && option=${option##-} && option=${option##-}
    case "$option" in
        w | width )
            o_width=$1
            shift
            ;;
        h | height )
            o_height=$1
            shift
            ;;
        n | noexec )
            no_exec=1
            ;;
        --) break ;; ## VITAL!!! Exits the while loop, no more options,
                     ## remaining $*, if any, are args
        *)
            cmd-echo -ec -- "$option is an invalid option."
            cat "$0"
            exit 1
            ;;
    esac
done

declare -a zenargs
zenargs=(--text-info --title="$*" --width="$o_width" --height="$o_height")
declare do_col
declare -a cmd
case $1 in
    perldoc)
        shift
        cmd=('perldoc' '-u' "$@")
        ;;
    man)
        cmd=("$@")
        do_col=1
        ;;
    tail )
        cmd=("$@")
        zenargs+=(--auto-scroll)
        ;;
    * )
        cmd=("$@")
        ;;
esac

if ((no_exec))
then
    echo "${cmd[*]} | zenity ${zenargs[*]}"
else
    if ((do_col))
    then
        "${cmd[@]}" | col -b | zenity "${zenargs[@]}" &
    else
        "${cmd[@]}" | zenity  "${zenargs[@]}" &
    fi
fi
