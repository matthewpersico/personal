## -*- sh -*-

declare moreopts=1
declare o_verbose=0
declare o_exec=1
while [[ "$1" =~ ^- ]] && ((moreopts))
do
    declare original="$1"
    declare option
    option=$(dashstripper "$original")
    shift ## That way you avoid endless loops on invalid options.

    case $option in
        verbose | v )
            o_verbose=1
            ;;
        noexec | n )
            o_exec=0
            o_verbose=1
            ;;
        --)
            moreopts=0
            ;;
        * )
            echo "$original is an invalid option. See $0 --help";
            ## (return if a func, exit if a script) 1
            ;;
    esac
done

declare lookfor=$1
shift
declare found
found=$(which "$lookfor")
if [ -n "$found" ]
then
    declare -a run
    declare i=-1
    declare r
    for r in "$@"
    do
        if [ "$r" = '%' ]
        then
            run[((i+=1))]="$found"
            found=''
        else
            run[((i+=1))]="$r"
        fi
    done
    ((o_verbose)) && echo "${run[@]} $found"
    if((o_exec))
    then
        "${run[@]}" $found
    else
        echo "no-exec mode"
    fi
    exit $?
else
    exit 1
fi

: <<POD
This is pod
