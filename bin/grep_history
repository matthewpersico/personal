#!/usr/bin/env bash

# grep_history

declare moreopts
moreopts=1
declare hostfilt=''
declare grepopts=''
declare epoch_ago=''
declare dodir=''
declare dofile=''
while [[ "$1" =~ ^- ]] && ((moreopts))
do
    ## Strip all leading dashes here so that -foo and --foo can both
    ## be processed as 'foo'.
    declare original="$1"
    declare option="$1"
    declare new=''
    while [ ! "$new" = "$option" ] && [ ! "$option" = '--' ]
    do
        new=$option
        option=${option##-}
    done
    shift ## That way you avoid endless loops on invalid options

    case "$option" in
        h ) hostfilt=$1
            shift ;;
        ## Both date options imply "from this date, forward"
        [0-9]* )
            declare epoch_today=$(date --date=$(date +%Y%m%d) +%s) ## midnight today
            declare days_ago=$(echo "$option" | sed 's/^-//')
            epoch_ago=$((epoch_today - (86400*days_ago)))
            ;;
        d )
            epoch_ago=$(date --date=$1 +%s)
            shift ;;
        i | l )
            grepopts="$grepopts $original"
            ;;
        dir )
            dodir=--include-dir
            ;;
        f|file )
            dofile=--include-file
            ;;
        fo|fileonly )
            grepopts="$grepopts -l"
            ;;
        -- )
            moreopts=0
            ;;
        * )
            echo invalid option "$1"
            exit 1
    esac
done

declare histfs
if [ -n "$epoch_ago" ]
then
    declare index_file=$(dirname $HISTFILE)/.index
    histfs=$(perl -MData::Dumper -e '
 do $ARGV[0] if (-r $ARGV[0]);
 @files = grep{ $index{$_}->{start} >= $ARGV[1] }
      keys %index;
 print "@files";'  $index_file $epoch_ago)
else
    histfs="$(dirname $HISTFILE)/*"
fi

if [ -z "$histfs" ]
then
    echo "No history files found matching date params"
else
    # DEBUG perl -d:ptkdb $(which parse_bash_hist)\
    parse_bash_hist $dodir $dofile $grepopts -- "$1" $histfs
fi
