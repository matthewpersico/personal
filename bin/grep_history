#!/usr/bin/env bash

# grep_history

declare moreopts
moreopts=1
declare -a hostfilt
declare -a grepopts
declare epoch_ago=''
declare -a opt_epoch_ago
declare dodir=''
declare dofile=''
declare -a matchdir

while [[ "$1" =~ ^- ]] && ((moreopts)); do
    declare original="$1"
    shift
    declare option
    option=$(dashstripper "$original")
    ## This bit deals with --foo=bar instead of --foo bar
    declare okey=''
    declare ovalue=''
    ## but only deal with it if we really have an option. Otherwise you
    ## misinterpret items like this git clone option: --config
    ## "remote.origin.fetch=+refs/pull/*/head:refs/remotes/origin/pr/*'
    if [[ $option =~ ^- ]]; then
        if [[ "$option" =~ = ]]; then
            okey=${option%%=*}
            ovalue=${option#*=}
            option="$okey"
        fi
    fi

    case $option in
        help )
            cat <<EOHELP
-h host        : only from machine 'host' (not yet implemented)
-n             : start n days ago
-d epoch       : epoch seconds ago
-i/-l          : pass these to grep
--dir          : include the cwd at time of command
--matchdir dir : only include commands whose pwd
                 matches the regexp 'dir'; implies
                 --dir
-f/--file      : include name of the history file
                 where command was written
-fo/--fileonly : print history file name only, no commands
EOHELP
            exit 0
            ;;
        h )
            # shellcheck disable=SC2034 # remove when implemented
            hostfilt=("--hostname" "${ovalue:-$1}")
            [[ -z "$ovalue" ]] && shift
            ;;
        ## Both date options imply "from this date, forward"
        [0-9]* )
            declare epoch_today
            epoch_today=$(date --date="$(date +%Y%m%d)" +%s) ## midnight today
            declare days_ago
            # shellcheck disable=SC2001
            days_ago=$(echo "$option" | sed 's/^-//')
            epoch_ago=$((epoch_today - (86400*days_ago)))
            opt_epoch_ago=("--epoch-ago" "$epoch_ago")
            ;;
        d )
            opt_epoch_ago=("--epoch-ago" "$(date --date="${ovalue:-$1}" +%s)" )
            [[ -z "$ovalue" ]] && shift
            ;;
        i | l )
            grepopts+=("$original")
            ;;
        dir )
            dodir=--include-dir
            ;;
        matchdir | match-dir)
            matchdir=("--match-dir" "${ovalue:-$1}")
            [[ -z "$ovalue" ]] && shift
            ;;
        f|file )
            dofile=--include-file
            ;;
        fo|fileonly )
            grepopts+=('-l')
            ;;
        -- )
            moreopts=0
            ;;
        * )
            echo invalid option "$1"
            exit 1
    esac
done

pattern_to_match="${1:-.*}"
##perl -d:ptkdb -S ## no-ptkdb-issue
parse_bash_hist "${opt_epoch_ago[@]}" "${hostfilt[@]}" $dodir $dofile "${matchdir[@]}" "${grepopts[@]}" -- "$pattern_to_match" "$HISTDIR"/*
