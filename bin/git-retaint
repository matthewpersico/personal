#!/usr/bin/env bash

[[ -n $GIT_AUDIT ]] && echo "$(date): ${0##*/}" >> "${TILDAE:-$HOME}/.gitaudit"

# git-retaint

if [[ "$1" = '' ]]; then
    cmd-echo "Need files and dirs or --all in a git repo"
    exit 1
fi

declare -a files
if [[ "$1" = '--all' ]] || [[ "$1" = '-all' ]]; then
    ## That's the pattern we set in git-untaint
    mapfile -t files < <(git grep -l -- '##<GCS> -w -T git-untaint' ) ## <GCSLITERAL>
else
    declare i
    for i in "$@"; do
        if [[ -f "$i" ]] && grep -q '##<GCS> -w -T git-untaint' "$i"; then ## <GCSLITERAL>
            files+=("$i")
        elif [[ -d "$i" ]]; then
            # shellcheck disable=SC2038
            for j in $(find "$i" -type f | xargs grep -l -- '##<GCS> -w -T git-untaint'); do ## <GCSLITERAL>
                files+=("$j")
            done
        else
            cmd-echo "'$i' is not a file or a directory"
        fi
    done
fi

if ((${#files[@]})); then
    cmd-echo "Processing these files: ${files[*]}"
    ## Make the change on line 1, remove line 2
    perl -pi -e 'BEGIN{$lastARGV=""}
             if ($lastARGV ne $ARGV) {
                 $lastARGV = $ARGV;
                 $ln=1;
             }
             if ($ln == 1) {
                 chomp $_;
                 $_=~s/\s+$//;   # We chop the whitespace here...
                 $_ .= " -wT\n"; # ...so that we can add it back
                                 # here, in case it is chopped
                                 # externally by perltidy
                 $skip=<>;
             }
             $ln++;' "${files[@]}"
else
    echo "No files to process"
fi
