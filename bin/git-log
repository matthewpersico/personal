# -*- sh -*-
# shellcheck shell=bash

# git-log

use on_exit

# shellcheck disable=SC2034 # We'll use it eventually
cmd_echo_id='git-log'

declare dispatch_to_real_git=1

declare -a pass_on

## DO NOT attempt to convert this to a 'getopt' implementation; it would
## require specifying and handling every existing option in 'git log',
## and it is just not necessary.
while (( $# )); do
    declare arg=$1
    shift
    case "$arg" in
        --h | --help )
            # shellcheck disable=SC2119
            git-usage "$0"
            exit 0
            ;;
        --names-only | --names | --with-names | \
            --files | --with-files | --show-files )
            pass_on+=("--name-only")
            ;;
        --follow-rename* )
            pass_on+=('--follow' '--name-status')
            ;;
        --diff )
            pass_on+=('-p')
            ;;
        --short)
            pass_on+=("--pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'" '--abbrev-commit')
            ;;
        * )
            pass_on+=("$arg")
            ;;
    esac
done

if ((dispatch_to_real_git)); then
    ## Currently, we ALWAYS run the real git log, unless we exec-out or exit
    ## above.
    "$REALGIT" log "${pass_on[@]}" || exit $?
fi

exit 0

:<<'__PODUSAGE__'
=head1 NAME

git-log - extensions to git log

=head1 SYNOPSIS

 git-log [extended options]

=head1 DESCRIPTION

Additions and documentations for 'git log'.

=head1 OPTIONS

=over 4

=item --names-only | --names | --with-names | --files | --with-files | --show-files

Synonyms for --name-only.

=item --follow-rename

Synonym for --follow --name-status. Allows you to go back and get a full history
AND see the renames in the log. Only works for one file at a time.

=item --diff

Synonym for -p.

=back

=cut

__PODUSAGE__
