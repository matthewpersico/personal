#!/usr/bin/env bash

# yesnoquit

[[ "$1" =~ ^-h ]] && bash-usage "$0" && exit 0

declare prompt_text
prompt_text=$1;shift
declare choices
choices="y/n/q"
declare default
default=$1;shift
declare -a cmd
cmd=("$@")

declare respyn
respyn=$(pick "$prompt_text" "$choices" "$default")

if [ "$respyn" = 'y' ] || [ "$respyn" = 'n' ] || [ "$respyn" = 'q' ]
then
    if (( ${#cmd[@]} == 0 ))
    then
        ## No command, give response
	    echo "$respyn"
        [ "$respyn" = 'y' ] && exit 0
	    exit 1
    elif [ "$respyn" = 'y' ]
    then
        "${cmd[@]}"
        exit $?
    else
        exit 1
    fi
fi
exit 0 ## usage guard when sourcing

:<<'__PODUSAGE__'
=head1 NAME

yesnoquit - prompt for a yes or no or quit answer

=head1 SYNOPSIS

  yesno "prompt text" "[y|n|q|]" [command and args to execute if yes]

  Examples:

  resp=$(yesnoquit "prompt text" "n"
  if [ "$resp" = 'y' ]
  then
      ## yes actions...
  elif [ "$resp" = 'n' ]
  then
      ## no actions...
  else
      ## quit actions, usually exit the script...
  fi

  yesno "prompt text" "n" [command and args to execute if yes])

  [ "$(yesno "prompt text")" = 'y' ] && command and args to execute if yes

=head1 DESCRIPTION

Print the prompt text, print the user's response, which is limited to 'y', 'n' or 'q', and use that to make a decision. Accepts 'Y', 'N', and 'Q'. Does not accept 'yes' or 'no' or 'quite' or 'true', etc.

Prints the result on stdout. Returns 0 if 'y', 1 if 'n' or 'q'.

=head1 ARGUMENTS

=over 4

=item "prompt text"

Prints this text, followed the literal text '(y/n/q) ?', waiting for your response.

=item "[y|n|q|]"

The default response if you just hit return. If you do not want a default, specify a blank string, i.e: "".

=item command and args to execute if yes

Executes this command with args on a posititve response (y). In this case, prints the output of the command and returns the exit value of the command. On a negative or quit response (n or q), prints nothing and returns 1.

=back

=cut

__PODUSAGE__
