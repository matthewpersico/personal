# -*- sh -*-

# vmfuncs

VMFUNCS_FILE=${BASH_SOURCE[0]}

vmfuncs_edit ()
{
    xo $VMFUNCS_FILE
}
#nxport -f vmfuncs_edit
alias vmfuncs-edit=vmfuncs_edit

vmfuncs_reload ()
{
    . $VMFUNCS_FILE
}
#nxport -f vmfuncs_reload
alias vmfuncs-reload=vmfuncs_reload
alias vmfuncs-load=vmfuncs_reload

VMFUNCS_TOOLKIT_FILE=~/.ssh/id_rsa.toolkit
VMFUNCS_TOOLKIT_EXPIRE_FILE=~/.ssh/id_rsa.toolkit.expires
VMFUNCS_BCPCVMS_FILE=~/personal/bin/.bcpcvms

vmchoose ()
{
    local PS3='Pick a machine:'
    select vmname in ${!vmips[@]}
    do
        if [ -n "$vmname" ]
        then
            break
        fi
    done
    echo $vmname
}
#nxport -f vmchoose

vmgo ()
{
    vm_toolkit_file_maint

    . $VMFUNCS_BCPCVMS_FILE
    vmname=${1:-undef}

    if [ "${vmips[$vmname]}" = '' ]
    then
        vmname=$(vmchoose)
    fi
    vmip=${vmips[$vmname]}
    ssh -i $VMFUNCS_TOOLKIT_FILE $vmip $@
}
#nxport -f vmgo
alias govm='vmgo '

vmshow ()
{
    cat $VMFUNCS_BCPCVMS_FILE | grep -v 'declare -A vmips'
}
#nxport -f vmshow
alias showvm='vmshow '

vmadd ()
{
    if [ $# != '2' ]
    then
        echo usage vmadd name ip
        return 1
    fi

    echo "vmips[$1]=$2" >> $VMFUNCS_BCPCVMS_FILE
    sort -u $VMFUNCS_BCPCVMS_FILE | grep -v 'declare -A vmips' > $VMFUNCS_BCPCVMS_FILE.$$

    echo 'declare -A vmips' >  $VMFUNCS_BCPCVMS_FILE
    cat $VMFUNCS_BCPCVMS_FILE.$$ >> $VMFUNCS_BCPCVMS_FILE
    rm -f $VMFUNCS_BCPCVMS_FILE.$$
    vmshow
}
#nxport -f vmadd
alias addvm='vmadd '

vmdel ()
{
    . $VMFUNCS_BCPCVMS_FILE
    vmname=${1:-undef}

    if [ "${vmips[$vmname]}" = '' ]
    then
        vmname=$(vmchoose)
    fi
    cat $VMFUNCS_BCPCVMS_FILE | grep -v "vmips\[$vmname\]=${vmips[$vmname]}" > $VMFUNCS_BCPCVMS_FILE.$$
    mv $VMFUNCS_BCPCVMS_FILE.$$ $VMFUNCS_BCPCVMS_FILE
    vmshow
}
#nxport -f vmdel
alias delvm='vmdel '

NFSMACHINE=nylxdev1.dev.bloomberg.com
cptonfs ()
{
    scp "$@" $NFSMACHINE:vmbounce
}
alias cp-to-nfs='cptonfs '
alias scp-to-nfs='cptonfs '

cpfromnfs ()
{
    mkdir -p ~/vmbounce
    scp $NFSMACHINE:vmbounce/* ~/vmbounce
}
alias cp-from-nfs='cpfromnfs '
alias scp-from-nfs='cpfromnfs '
