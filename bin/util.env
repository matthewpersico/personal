#!/usr/bin/env bash

# util.env

## 0-as-success is the correct way to return from commands and functions in
## UNIX so that the typical 0-success-from-UNIX-commands paradigm "just works"
## in statements like the following (assuming xxx is some program exiting 0 or
## function returning 0):
##
##    xxx && echo xxx worked
##    if xxx; then...
##

###################
## Interactivity ##
###################
STDIN=0;export STDIN
STDOUT=1;export STDOUT
STDERR=2;export STDERR

##########################
## Bash array functions
## References and notes:
##
## http://www.tech-recipes.com/rx/911/queue-and-stack-using-array/
## http://stackoverflow.com/questions/12691121/bash-array-expansion-using-variable-indirection-expansion
## http://stackoverflow.com/questions/23819839/assign-to-a-bash-array-variable-indirectly-by-dynamically-constructed-variable
##     bash 4.3+: use declare -n to effectively create an alias ('nameref') of another variable
########################################

########################################
## Bash hash (assoc. array) functions
## References and notes:
##
## The perl loop
##    foreach (my ($k,$v) = each(%hash)) { ...
## can be had in shell with
##    heach hash | while read -r k v; do...
########################################

## includes (source) for bash
BASH_INC_DIR=$PERSONALBIN; export BASH_INC_DIR

## Guard variable
UTILENV_LOADED=1
export UTILENV_LOADED
