#!/usr/bin/env bash

echo "$(date): git-check-with-default-branch" >> "$HOME/.gitaudit"

# git-check-with-default-branch

## clone-and-fork repos need to check with the default branch in the canonical
## upstream branch.  If there is no 'upstream', then it's probably a clone
## only, so check against the default branch in origin.
declare default_branch
default_branch=$(git repo default-branch)

declare status
declare upstream
upstream=$(git remote get-url upstream 2>/dev/null)
if [ -n "${upstream}" ]; then
    git-check-with-remote --remote upstream --branch "$default_branch" "$@"
    status=$?
else
    declare origin
    origin=$(git remote get-url origin 2>/dev/null)
    if [ -n "${origin}" ]; then
        git-check-with-remote --remote origin --branch "$default_branch" "$@"
        status=$?
    else
        cmd-echo --ec -- "Current repo is not a clone of a remote"
        status=1
    fi
fi
exit $status

:<<'__PODUSAGE__'
=head1 NAME

git-check-with-default-branch - Check current repo/branch against source repo/default-branch

=head1 SYNOPSIS

 git-check-with-default-branch

=head1 DESCRIPTION

Check against the source remote repo, default-branch, to see if the two in line.

=back

__PODUSAGE__
