#!/usr/bin/env bash

# git-what

# shellcheck disable=SC1090
# Don't know if we really need this yet:
# . "$REALGIT_EXEC_PATH/git-sh-setup"

## Functions that encapsulate the enhanced functionality. main() is defined
## last and called last.

main ()
{
    declare action=$1
    shift

    [ "$action" = 'is' ] && action=$1 && shift ## syntactic sugar

    if [[ "$action" =~ ^-+h ]]
    then
        (
            script-usage
        ) 2>&1 | ${PAGER:-less}
        return  0
    fi

    declare -a actions
    declare modified_only=0
    case $action in
        mod-only | modified-only )
            modified_only=1
            ;;
        committable | staged )
            actions+=('--staged') ;;
        mod| modified )
            actions+=('--staged' '--unstaged') ;;
        edited )
            actions+=('--all-mod') ;;
        untracked | unstaged | \
            unmodified | deleted | \
            new | ignored | renamed )
            actions+=("--$action") ;;
        * )
            cmd-echo -- "'$action' is an invalid request"
            script-usage 2>&1 | ${PAGER:-less}
            exit 1
            ;;
    esac

    declare moreopts=1
    declare -a fmt_options
    declare opt_absolute=0
    declare opt_rooted=0
    declare opt_edit=0
    while [[ "$1" =~ ^- ]] && ((moreopts))
    do
        declare original="$1"
        shift
        declare option
        option=$(dashstripper "$original")

        case $option in
            absolute ) opt_absolute=1
                       fmt_options+=("--$option")
                       ;;
            rooted ) opt_rooted=1
                     fmt_options+=("--$option")
                     ;;
            edit ) opt_edit=1 ;;
            * )
                cmd-echo -- "--$action is an invalid option"
                script-usage 2>&1 | ${PAGER:less}
                exit 1
        esac
    done

    if ((opt_rooted))
    then
        if ((opt_absolute))
        then
            cmd-echo -- 'Cannot specify --rooted and --absolute'
            script-usage 2>&1 | ${PAGER:less}
            exit 1
        elif ((opt_edit))
        then
            cmd-echo -- 'Cannot specify --rooted and --edit'
            script-usage 2>&1 | ${PAGER:less}
            exit 1
        fi
    fi

    declare -a output
    if ((modified_only))
    then
        declare deleted
        deleted=$(ajoin '|' "$(git what is deleted "${fmt_options[@]}" )")
        declare mod
        for mod in $(git what is modified "${fmt_options[@]}")
        do
            output+=("$(echo "$mod" | grep -v -E "$deleted")")
        done
    else
        mapfile -t output < <($DEBUG_GIT_STATUS_PARSE git-status-parse "${fmt_options[@]}" "${actions[@]}")
    fi

    if((opt_edit))
    then
        $EDITOR "${output[@]}"
    else
        for mod in "${output[@]}"; do echo "$mod"; done
    fi
    exit $?
}

main "$@"
exit $?

:<<'__PODUSAGE__'
=head1 NAME

git-what

=head1 SYNOPSIS

 git what [is] [committable | untracked | unstaged | unmodified |
                staged | renamed | deleted | mod[ified]-only | mod[ified] |
                ignored | edited ] [--rooted| [--absolute] [--edit] ]

 git what [is] --help|-h

=head1 DESCRIPTION

Executes 'git status --porcelain', parsed and formatted for requested
statuses. To debug:

 $ export DEBUG_GIT_STATUS_PARSE='perl -S -d'

=head1 ARGUMENTS

=over 4

=item is

The word "is" is syntactic sugar and is ignored.

=item actions

'committable', 'untracked', 'unstaged', 'unmodified', 'staged', 'renamed',
'deleted', 'mod[ified]', 'ignored', and 'edited' correspond to git statuses.

'mod[ified]-only' is modified, excluding 'deleted', whereas git reports deleted
files as 'modified'.

=back

=head1 OPTIONS

=over 4

=item ---rooted

Show files relative to the repo root dir. Default is to show them relative to
the current directory. Cannot specify --absolute or --edit with this option.

=item ---absolute

Show files relative to '/'. Default is to show them relative to the current directory.

=item --edit

Pass all the files found to $EDITOR.

=item --help

Print this help text.

=back

=cut

__PODUSAGE__
