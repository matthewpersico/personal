#!/usr/bin/env perl

use strict;
use warnings;
use File::Basename;
use DateTime;
use File::Slurp;

my %next = (
    druoso    => {
        who => 'mpersico5',
        mail => 'mpersico5@bloomberg.net',
    },
    mpersico5 => {
        who => 'jbonney4',
        mail => 0#'jbonney4@bloomberg.net',
    },
    jbonney4  => {
        who => 'druoso',
        mail => 0#'druoso@bloomberg.net',
    },
);

my ($name,$path,$suffix) = fileparse($0,'.cron');
my $log = "${path}/${name}.log";
my @lines;
if ( -e $log ) {
    @lines = reverse(read_file($log, {chomp => 1}));
    ## Stored new to old, want to work old -> new
}

if (@ARGV and $ARGV[0] eq '--cat' ) {
    print join("\n",reverse(@lines));
    exit 0;
}

my $now = DateTime->now;
exit 0 if ($now->day_of_week() > 5);
my $hol = "${path}/${name}.holidays";
my %holidays = map { (split(/-/,$_))[0] => 1 } read_file($hol, {chomp => 1});
exit if defined $holidays{$now->ymd('/')};

my @data;
if( @lines ) {
    @data = split(/\s+/, $lines[-1]);
} else {
    $data[0] = 'jbonney4';
}
push @lines, sprintf('%s %s',
                     $next{$data[0]}->{who},
                     $now->ymd('/'));

write_file($log, join("\n", reverse @lines));

if( $next{$data[0]}->{mail} ) {
    qx(mailx -s '1381 Monitoring' $next{$data[0]}->{mail} <<EOM
You ($next{$data[0]}->{who}) are today's 1381 bucket monitor.
EOM
);
} else {
    print "Today's monitor is $next{$data[0]}->{who}\n";
}
