# -*- sh -*-
# shellcheck shell=bash

# git-post-new

cmd-echo --id git-post-new "Making a $GITFUNCS_SOURCE_CTRL_LOG_NAME file"
touch "$(git root)/$GITFUNCS_SOURCE_CTRL_LOG_NAME"

if [[ "$1" = '-t' ]]; then
    cmd-echo --id git-post-new "Setting timestamps..."
    git-retimestamp
fi

true; exit ## POD guard

# shellcheck disable=SC2317 #https://github.com/koalaman/shellcheck/wiki/SC2317
:<<'__PODUSAGE__'
=head1 NAME

git-post-new - setups after creating a new worktree or cloning

=head1 SYNOPSIS

 git-post-new [-t]

=head1 DESCRIPTION

Assuming that the command is invoked in a clone or a worktree, it creates a
$GITFUNCS_SOURCE_CTRL_LOG_NAME file for use by emacs to describe file changes.

=head1 OPTIONS

=over 4

=item -t

Instead of leaving the files with the timestamp of when they were cloned, go
figure out from git log when each was last committed and timestamp them with
that time.

=back

=cut

__PODUSAGE__
