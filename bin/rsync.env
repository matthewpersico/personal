#!/usr/bin/env bash

# rsync.env
RSYNCFUNCS_ROOT="${TILDAE:-$HOME}/rsync-backup"
if [[ ! -e $RSYNCFUNCS_ROOT ]]; then
    ## We are not doing rsync backups.
    unset RSYNCFUNCS_ROOT
else
    export RSYNCFUNCS_ROOT

    RSYNCFUNCS_LOG_HOME="$RSYNCFUNCS_ROOT/logs"
    export RSYNCFUNCS_LOG_HOME

    RSYNCFUNCS_CONFIG_HOME="$RSYNCFUNCS_ROOT/config"
    export RSYNCFUNCS_CONFIG_HOME

    RSYNCFUNCS_BACKUP_ROOT="$RSYNCFUNCS_ROOT/data"
    export RSYNCFUNCS_BACKUP_ROOT

    ## If empenv is present, check for and create a link in
    ## '~/empenv/bin/"empenv"rsynvc.env'. Otherwise, create a link by hand. Do not
    ## create a link here; it may change from system to system.
    if [[ ! -e "$HOME/empenv" ]]; then
        ## If not a directory and not a link (cannot use -e on a link)
        if [[ ! -e "$RSYNCFUNCS_BACKUP_ROOT" ]]; then
            echo "Need to set create $RSYNCFUNCS_BACKUP_ROOT or link it to a backup location."
        fi
    fi

    RSYNCFUNCS_PERSONAL_EXCLUDE_TEMPLATE="$HOME/personal/data/rsync-backup.$(hostname).exclude"
    export RSYNCFUNCS_PERSONAL_EXCLUDE_TEMPLATE

    RSYNCFUNCS_FAILCOUNTER="$RSYNCFUNCS_CONFIG_HOME/rsync-backup.$(hostname).failcounter"
    export RSYNCFUNCS_FAILCOUNTER

    RSYNCFUNCS_TRACKER="$RSYNCFUNCS_CONFIG_HOME/rsync-backup.$(hostname).tracker"
    export RSYNCFUNCS_TRACKER

    RSYNCFUNCS_PAUSEFILE="$RSYNCFUNCS_CONFIG_HOME/rsync-backup.$(hostname).pausefile"
    export RSYNCFUNCS_PAUSEFILE
fi

RSYNCENV_LOADED=1
export RSYNCENV_LOADED

true # for 'use'
