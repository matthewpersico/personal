#!/usr/bin/env bash

# git-hook-pushpull-guts

declare current_template
current_template=$(git config --get init.templatedir)
# gitfuncs_githook_root is assigned in git.env
# shellcheck disable=2154
if [ "$current_template" != "${gitfuncs_githook_root}" ]
then
    echo "Error: Config says init.templatedir = '$current_template'"
    echo "       It should be '${gitfuncs_githook_root}'"
    echo "       Please correct."
    exit 1
fi

if [ ! -d "$current_template" ]
then
    echo "Error: Can't find '$current_template'"
    echo "       Please correct."
    exit 1
fi

declare hooks
# gitfuncs_githook_dir is assigned in git.env
# shellcheck disable=2154
hooks=$(ls "${gitfuncs_githook_dir}"/*)

declare repo
for repo in "$@"
do
    (($# > 1)) && echo "== $repo"
    for h in $hooks
    do
        declare hooktgtdir
        hooktgtdir="${TILDAE:-$HOME}/$(git-strip-repo "$repo")/.git/hooks"
        if [ -f "$hooktgtdir" ]
        then
            echo "$hooktgtdir is a file. whoops..."
            ## Fix up accidental directory overwrite
            \rm "$hooktgtdir"
            mkdir "$hooktgtdir"
        fi

        declare hooktgtpath
        hooktgtpath="$hooktgtdir/$(basename "$h")"
        if [ ! -e "$hooktgtpath" ] || [ "$h" -nt "$hooktgtpath" ]
        then
            if [ ! -e "$hooktgtpath" ]
            then
                echo "$hooktgtpath not found. Copying from $h..."
            elif [ "$h" -nt "$hooktgtpath" ]
            then
                echo "$hooktgtpath out of date. Updating from $h..."
            fi
            cp -pv "$h" "$hooktgtpath"
            chmod +x "$hooktgtpath"
        elif [ "$h" -ot "$hooktgtpath" ]
        then
            declare tmpout
            tmpout=$(mktemp -t tmp.git-push-hook.XXXXXXXXXX)
            diff "$h" "$hooktgtpath" 1>"$tmpout" 2>&1
            if [ -s "$tmpout" ]
            then
                echo "$hooktgtpath newer than $h. Here's the diff, older to newer:"
                cat "$tmpout"
            fi
            rm -f "$tmpout"
        else
            echo "$hooktgtpath up to date"
        fi
    done
done
