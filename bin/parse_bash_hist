#! /usr/bin/env perl

use strict;
use warnings;

use Getopt::Long;
use POSIX qw(strftime);
use File::Basename;

my %opt;
our %index;
GetOptions(
    \%opt, qw(i
      l
      include-dir
      include-file
      match-dir=s
      hostname=s
      epoch-ago=i
      )
);
my $pattern = shift;
$pattern = "(?i)$pattern" if $opt{i};
$pattern = qr/$pattern/;
my $time;
my $dir;
my @entries;
my $entry;
my @files;

if ( $opt{'epoch-ago'} ) {
    my $index_file = dirname("$ENV{HISTFILE}") . '/.index';
    do $index_file;
    @files = grep { $index{$_}->{start} >= $opt{'epoch-ago'} } keys %index;
} else {
    @files = @ARGV;
}
FILE: for my $file (@files) {
    next FILE
      if ( $opt{hostname} and $file !~ m/$opt{hostname}/ );
    my $ih = IO::File->new("< $file")
      or die "Cannot open $file:$!";

  LINE: while (<$ih>) {
        if ( $_ =~ m/^##/ ) {
            $entry = {};
            next;
        }
        chomp;

        if ( $_ =~ m/^#(\d+)/ ) {
            ## Parsing line 1
            $entry = { time => $1 };
            if ( $_ =~ m/## pwd => (.*)/ ) {
                my $dir = $1;
                if (   $opt{'include-dir'}
                    || $opt{'match-dir'} )
                {
                    $entry->{dir} = $dir;
                }
                next;
            }
        } else {
            ## Parsing line 2
            $entry->{cmd} = $_;
            if (   $opt{'include-file'}
                or $opt{l} )
            {
                $entry->{file} = $file;
            }

            ## Now that it is parsed, do we want it?
            if ( $opt{'match-dir'} ) {
                if (    $entry->{dir}
                    and $entry->{dir} =~ m/$opt{'match-dir'}/ )
                {
                    push @entries, $entry;
                }
            } elsif ( $_ =~ m/$pattern/ ) {
                push @entries, $entry;
            }
        }
    }
}

@entries = sort { $a->{time} <=> $b->{time} } @entries;
if ( !$ENV{HISTTIMEFORMAT} ) {
    $ENV{HISTTIMEFORMAT} = '%m/%d - %H:%M:%S';
    if ( $entries[-1]->{time} - $entries[0]->{time} >= 60 * 60 * 24 * 365 ) {
        $ENV{HISTTIMEFORMAT} = '%Y/%m/%d - %H:%M:%S';
    }
}
my $datelen = 0;
my @output;
my %unique;
for (@entries) {
    if ( $opt{l} ) {
        $unique{ $_->{file} }++;
    } else {
        $datelen = length( strftime( $ENV{HISTTIMEFORMAT}, localtime(1) ) )
          if not $datelen;
        push @output,
          sprintf(
            "%s %s%s%s\n",
            strftime( $ENV{HISTTIMEFORMAT}, localtime( $_->{time} ) ),
            $_->{cmd},
            ( $_->{dir} ? "\n" . ' ' x ( $datelen + 5 ) . "($_->{dir})" : '' ),
            (
                $_->{file}
                ? "\n" . ' ' x ( $datelen + 5 ) . "($_->{file})"
                : ''
            )
          );
    }
}
@output = map { "$_\n" } sort keys %unique if $opt{l};
print @output if (@output);
