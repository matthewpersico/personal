# -*- sh -*-
# shellcheck shell=bash

# perlx

## For starting up windows for forked Perl programs in debugger to
## attach to.
declare countem
countem=$1; ## Specify as -x, like an option or x, like an arg
((countem)) || countem=1
((countem<0)) && ((countem=countem*-1)) ## if -x, make it positive
while ((countem>0)); do
    # shellcheck disable=SC2016 #https://github.com/koalaman/shellcheck/wiki/SC2016
    # Yes, we know we are using non-expanding single quotes
    xterm -e sh -c 'echo This terminal was started to receive a forked perl debugger process.;
echo Set;
echo \$DB::fork_TTY=q\($(tty)\);
echo in the debugger before you reach the fork.;
echo Consider examining the value of the TERM variable;
echo to make sure it is something that perl5db.pl;
echo understands.;
echo Sleeping 99999999 starting at $(date);echo -e "\e]0;$(tty)\a
 ";sleep 99999999' &
    ((countem-=1))
done

true; exit

## You can add sections with =head1, but stick to =item for section breakdowns,
## not =head2/3/etc/.

# shellcheck disable=SC2317 #https://github.com/koalaman/shellcheck/wiki/SC2317
:<<'__PODUSAGE__'
=head1 NAME

perlx - script that does something

=head1 SYNOPSIS

 perlx [--option1] [ --option2 optionarg ] arg1 [arg2 ...]
     [fee] [dfsdfs] [sfsdfsf]

=head1 DESCRIPTION

Describe in general terms what perlx does.

=head1 ARGUMENTS

=over 4

=item arg

Describe what arg does, should be, etc. Add a new =item for each distinct arg.

=back

=head1 OPTIONS

=over 4

=item --option1

Describe what --option1 does.

=item --option2

Describe what --option2 does. Describe what optionarg does.

=over 2

=item *

A choice for optionarg

=item *

Another choice for optionarg

=back

=back

=cut

__PODUSAGE__
