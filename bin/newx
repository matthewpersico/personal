#!/usr/bin/env bash

# newx

declare var
declare more_opts
more_opts=1
declare count
count=1
declare bg
declare lxtermgeo_w
lxtermgeo_w="$XTERMGEO_W"
declare colors
while ((more_opts)) && [[ "$1" =~ ^- ]]
do
    declare option
    option=$(dashstripper "$1")

    case $option in
        w )
            ## wide
            ((lxtermgeo_w*=2)) ; shift ;;
        n )
            ## narrow
            ((lxtermgeo_w/=2)) ; shift ;;
        s )
            ## std
            ((lxtermgeo_w+-0)) ; shift ;;
        [0-9]* )
            ## number of xterms to spawn
            ((count=$1*-1)) ; shift ;;
        * )
            ## Is it a color?
            bg=$(dashstripper "$1")
            var="forebackmap_$bg"
            [ -n "${!var}" ] && colors="$colors ${!var}" && shift || more_opts=0 ;;
    esac
done

[ -z "${colors}" ] && var="forebackmap_$(xterm_background)" && colors=${!var}

## Yeah this is a little funky - you could end up creating "count"
## terminals of each color.
declare i=0
declare j=$i
while ((i<count))
do
    for color in $colors
    do
        # shellcheck disable=SC2086 # $XTERMFONTS needs expansion
        RXCmd "$HOSTNAME" -geometry "$XTERMGEO" $XTERMFONTS "$@" -fg "${color%%,*}" -bg "${color##*,}" \
              -geometry "${lxtermgeo_w}x${XTERMGEO_H}+$((XTERMGEO_X+(j*72)))+$((XTERMGEO_Y+(j*72)))"
        sleep .05 ## Just enough to space out the &-ed invocations so that they
        ## do not randomly appear, but rather appear in a nice
        ## cascade.
        ((j+=1))
    done
    ((i+=1))
done
## POD guard
exit 0

## You can add sections with =head1, but stick to =item for section breakdowns,
## not =head2/3/etc/.

:<<'__PODUSAGE__'
=head1 NAME

foo - script that does something

=head1 SYNOPSIS

 foo [--option1] [ --option2 optionarg ] arg1 [arg2 ...]
     [fee] [dfsdfs] [sfsdfsf]

=head1 DESCRIPTION

Describe in general terms what foo does.

=head1 ARGUMENTS

=over 4

=item arg

Describe what arg does, should be, etc. Add a new =item for each distinct arg.

=back

=head1 OPTIONS

=over 4

=item --option1

Describe what --option1 does.

=item --option2

Describe what --option2 does. Describe what optionarg does.

=over 2

=item *

A choice for optionarg

=item *

Another choice for optionarg

=back

=back

=cut

__PODUSAGE__
