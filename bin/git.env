# -*- sh -*-
# shellcheck shell=bash
# shellcheck disable=SC1090 #https://github.com/koalaman/shellcheck/wiki/SC1090

# git.env

# Make sure this is re-entrant - some $job profiles need to re-run it

##
## Grab the real git for use in our wrappers. Cannot use git --realpath because
## our git wrapper will be found and our git wrapper needs REALGIT - circular
## reference.
##
REALGIT=$(find-real git)
export REALGIT

##
## Ensure we are clear what version of git we are using, in case an update is
## incompatible or we end up on an un-updated machine.
##
declare REALGIT_VERSION_VERIFY_FILE="${TILDAE}/.config/git-version-verify.data"
export REALGIT_VERSION_VERIFY_FILE
git-version-verify git.env

##
## gitfuncs environment stuff
##

## This will be checked on each login and any time this script is reloaded.
## However, it is only ever executed when logging into a system where the
## home directory has never been used.
GITENV_REPO_ROOT=$(git config --get --expand ext.git-repo-root.root)
export GITENV_REPO_ROOT
[[ ! -e "$GITENV_REPO_ROOT" ]] &&  mkdir -vp "$GITENV_REPO_ROOT"

if ! declare -F | grep -q __git_ps1; then
    ! $CRON && echo "__git_ps1 not loaded."
    declare shl
    shl="$(hash -r; "${REALGIT}" --exec-path)/git-sh-prompt"
    if [[ -e "$shl" ]]; then
        . "$shl"
        safe_func_export __git_ps1
        ! $CRON && echo "$shl loaded."
    else
        ! $CRON && echo "$shl not found."
    fi
fi

if ! declare -F | grep -q __git_complete; then
    ! $CRON && echo "__git_complete not loaded."
    declare gitinstallroot
    gitinstallroot=$(dirname "$(dirname "$REALGIT")")
    declare shl="$gitinstallroot/share/bash-completion/completions/git"
    if [[ -e "$shl" ]]; then
        . "$shl"
        safe_func_export __git_complete __git_sequencer_status __git_eread
        ! $CRON && echo "$shl loaded."
    else
        ! $CRON && echo "$shl not found."
    fi
fi

##
## Editing
##
## This should match the '(change-log-default-name ...) in your emacs config.
GITFUNCS_SOURCE_CTRL_LOG_NAME=SourceCtrlLog
export GITFUNCS_SOURCE_CTRL_LOG_NAME

ALTERNATE_EDITOR=$( (type -P vim || type -P vi)2>/dev/null)
export ALTERNATE_EDITOR

##
## Extentions per remote repo type
##
# shellcheck disable=SC2043
for remote_repo_type in github; do
    . "${PERSONALBIN}/${remote_repo_type}.env"
done
unset remote_repo_type

##
## Important repos
##

declare _git_env_path
for _git_env_path in "$HOME/personal" \
                         "$HOME/.emacs.d/taps/$USER" \
                         "$HOME/.git_template" \
                         "$HOME/examples"; do
    addpath -p GIT_IMPORTANT_REPO_LIST "$_git_env_path"
done
export GIT_IMPORTANT_REPO_LIST

##
## Misc
##
GIT_EXT_META_DATE_FMT='+%Y-%m-%d.%H:%M:%S%z'
export GIT_EXT_META_DATE_FMT
GIT_EXT_META_PREFIX='extmeta'
export GIT_EXT_META_PREFIX

GIT_HOOK_SKIP_TAGS=" perl perltidy perlcompile python black isort pylint shell shellcheck shebang "
export GIT_HOOK_SKIP_TAGS

GITENV_LOADED=1
export GITENV_LOADED

#  LocalWords:  fi
