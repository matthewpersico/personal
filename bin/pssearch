## -*- sh -*-
case $OS_O in
    GNU/Linux ) cmd="ps lxf -U ${USER}" ;;
    Cygwin ) cmd="ps -U ${USER}" ;;
    * ) echo "psme does not support $OS_O" ; exit 1 ;;
esac

$cmd | perl -e 'use strict;
use warnings;
use Text::Wrap;

our %opt;
my %print;
my $wrap_min=0;

while(@ARGV && $ARGV[0] =~ m/^-/) {
    my $o = shift @ARGV;
    $o =~ s/^-+//;

    if ( $o =~ m/pid/ ) {
        $opt{$o} = shift;
        delete $opt{command};
    } elsif ( $o =~ m/comm/ ) {
        $opt{command} = shift;
        delete $opt{pid};
    } elsif ( $o =~ m/wrap/ ) {
        $opt{$o} = `tput cols`;
        chomp $opt{$o};
        delete $opt{trunc};
        delete $opt{raw};
    } elsif ( $o =~ m/trunc/ ) {
        $opt{$o} = `tput cols`;
        chomp $opt{$o};
        delete $opt{wrap};
        delete $opt{raw};
    } elsif ( $o =~ m/raw/ ) {
        delete $opt{trunc};
        delete $opt{wrap};
    }
}

my $striplead;
while(<>) {
    my $l = $_;
    my @f = split(/\s+/,$l);
    if ($f[2] eq q(PID)) {
        print $_;
        $wrap_min = index($l, q(COMMAND));
        $striplead = 0;
        next;
    }

    if (!$opt{pid} || $f[2] eq $opt{pid}) {
        $print{$f[2]} = 1;
        my $command = substr($l, $wrap_min);
        $command =~ m/^(\s+)/;
        if($opt{pid} && $f[2] eq $opt{pid}) {
            my $stripped = $1;
            $stripped ||= q();
            if($opt{pid} && $f[2] == $opt{pid}){
                $striplead = length($stripped);
            }
        }
    } else {
        my $parent = $f[3];
        if (defined $print{$parent}) {
            $print{$f[2]} = 1;
        }
    }
    if(defined $print{$f[2]}) {
        if ($opt{trunc} ) {
            chomp $l;
            print substr($l,0,$wrap_min),
                  substr($l,$wrap_min + $striplead,
                         $opt{trunc} - $wrap_min),"\n";
        } elsif ($opt{wrap} ) {
            my $ll = substr($l,0,$wrap_min) . substr($l,$wrap_min + $striplead);
            my $indent_idx = index($ll, q(\\_));
            if ($indent_idx>-1) {
                $indent_idx+=3
            } else {
                $indent_idx=$wrap_min;
            }
            if($indent_idx) {
                $Text::Wrap::columns=$opt{wrap};
                print wrap(q(),( q( ) x $indent_idx) . q( ++ ), $ll);
#                print wrap(q(),( q( ) x $indent_idx ), $ll);
            } else {
                print $l;
            }
        } else {
            print $l;
        }
    }
}' -- --trunc $@
