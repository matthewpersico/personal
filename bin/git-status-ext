#!/usr/bin/env bash

# git-status-ext

if ! git-version-verify 'git-status-ext'
then
    exit 1
fi

usage ()
{
    (
        echo "** Extended actions **"
        bash-usage git-status-ext
        bash-usage git-status-with-source-ctrl-log
        echo
        echo "** Standard actions **"
        "${REALGIT}" status --help
    ) 2>&1 | ${PAGER:-less}
}

[[ "$1" =~ ^-+h ]] && usage && exit 0

declare gr
gr="$(git root)"
declare rpwd
rpwd="$(realpath "${PWD}")"
if [[ $gr != "$rpwd" ]]
then
    cmd-echo "Must run git status-ext from the root" \
             "    $gr" \
             "not the current directory" \
             "    $rpwd"
    exit 1
fi

declare color
color='--color=never'
if [[ "$1" == --nocolor ]]
then
    shift
else
    { [ -t 1 ] || [ -p /dev/stdout ] ; } && color="--color=always"
fi

echo
echo "=== Latest log entry:"
git log $color -1
if (( $(git comment --show | wc -l) ))
then
    echo
    echo "=== Comments:"
    git comment --show
fi
echo
echo "=== Status:"
declare outcmd=cat
if [[ "$1" =~ -dif ]]
then
    outcmd='less -RE'
fi

git-status-with-source-ctrl-log $color "$@" | grep -v "No files specified" | $outcmd

## You can add sections with =head1, but stick to =item for section breakdowns,
## not =head2/3/etc/. If you want just plain text, get rid of pod tags and the
## 'POD' in __PODUSAGE__.

:<<'__PODUSAGE__'
=head1 NAME

git-status-ext - extended git status

=head1 SYNOPSIS

 git status-ext [--nocolor] [--diff] [pathspec...]

=head1 DESCRIPTION

A git status command enhanced as follows:

=over 4

=item Latest log entry

The log entry for the latest commit in the repo (git log -1) is shown.

=item Comments

Any comments on the repo.

=item Status with source-ctrl-log entries.

If SourceCtrlLog is found in the repo or worktree root, its contents are mixed
in with the regular git status display. If --diff is specfied, the git diff
output is also mixed in.

=back

=cut

__PODUSAGE__
