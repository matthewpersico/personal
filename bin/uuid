#!/usr/bin/env bash

# uuid

perl -e 'open my $FH, "/dev/urandom"
  or die "Cannot generate UUID\n";
sysread( $FH, my $r, 16 );
close $FH;

# treat $r as 8 16bit quantities using vec, format as a v4 uuid by
# grouping appropriately and setting the appropriate variant and version
# bits

printf "%04x%04x-%04x-%04x-%04x-%04x%04x%04x",
  vec( $r, 0, 16 ), vec( $r, 1, 16 ),
  vec( $r, 2, 16 ),
  ( ( vec( $r, 3, 16 ) & 0x0FFF ) | 0x4000 ),
  ( ( vec( $r, 4, 16 ) & 0x3FFF ) | 0x8000 ),
  vec( $r, 5, 16 ), vec( $r, 6, 16 ), vec( $r, 7, 16 );'
## POD guard
exit 0

## You can add sections with =head1, but stick to =item for section breakdowns,
## not =head2/3/etc/.

:<<'__PODUSAGE__'
=head1 NAME

uuid - script that does something

=head1 SYNOPSIS

 uuid [--option1] [ --option2 optionarg ] arg1 [arg2 ...] 
     [fee] [dfsdfs] [sfsdfsf]

=head1 DESCRIPTION

Describe in general terms what uuid does.

=head1 ARGUMENTS

=over 4

=item arg

Describe what arg does, should be, etc. Add a new =item for each distinct arg.

=back

=head1 OPTIONS

=over 4

=item --option1

Describe what --option1 does.

=item --option2

Describe what --option2 does. Describe what optionarg does.

=over 2

=item *

A choice for optionarg

=item *

Another choice for optionarg

=back

=back

=cut

__PODUSAGE__

