#!/usr/bin/env bash

# git-status-with-source-ctrl-log

declare diff
declare cached
declare nosclonly
declare moreopts=1
declare color
while [[ "$1" =~ ^- ]] && ((moreopts))
do
    declare original="$1"
    declare option
    option=$(dashstripper "$original")
    shift

    case $option in
        filesonly) filesonly='--filesonly';;
        nosclonly) nosclonly='--nosclonly';;
        diff) diff='--diff';;
        cached) cached='--cached';;
        h|help) script-usage; exit 0 ;;
        debug | x ) set -x; trap 'set +x' EXIT;;
        nocolor ) color='--nocolor';;
        --) moreopts=0;;
        * )
            cmd-echo -- "$original is an invalid option. See $0 --help";
            exit 1
            ;;
    esac
done

## Locate all the files to process
declare -a filenames
if (($#))
then
    ## Process what's specified
    filenames=("$@")
else
    mapfile -t filenames < <(git what is edited)
fi

git-process-source-ctrl-log --withstatus $diff $cached $color $nosclonly $filesonly "${filenames[@]}"

exit 0

:<<'__PODUSAGE__'
=head1 NAME

git-status-with-source-ctrl-log - merge a SourceCrtlLog file with git status

=head1 SYNOPSIS

    git-status-with-source-ctrl-log [--nosclonly] [--diff [--cached]] [--nocolor]
    git-status-with-source-ctrl-log [--help] [--diff] [--cached] [--nocolor]

=head1 DESCRIPTION

Run a 'git status' and interleave the entries from SourceCrtlLog in.

=head1 OPTIONS

=over 4

=item nosclonly

Only print status for items that have no entry in SourceCrtlLog.

=item diff

Also mix in the git diff of the item.

=item cached

Do the git diff with the --cached flag.

=item nocolor

Strip out the color highlighting

=back

=cut
__PODUSAGE__
